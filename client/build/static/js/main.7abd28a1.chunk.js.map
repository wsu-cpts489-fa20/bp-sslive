{"version":3,"sources":["AppMode.js","components/NavBar.js","components/SideMenu.js","components/FloatingButton.js","components/ModeBar.js","components/LoginPage.js","CoursesAppMode.js","ConfigTab.js","components/TabBar.js","components/Config_Basic.js","components/Config_Logo.js","components/CourseList.js","Courses.js","components/CourseSearch.js","components/CoursesForm.js","components/ConfigCourses.js","components/Config_Rounds.js","components/Config_Divisions.js","components/Config_Players.js","components/Config_Scorers.js","components/Config_Publish.js","components/FeedPage.js","components/RoundsTable.js","components/RoundForm.js","components/Rounds.js","components/DirectorMainPage.js","components/Leaderboard.js","components/App.js","serviceWorker.js","index.js"],"names":["AppMode","LOGIN","FEED","ROUNDS","ROUNDS_LOGROUND","ROUNDS_EDITROUND","COURSES","MAIN","LEADERBOARD","Object","freeze","NavBar","getMenuBtnIcon","props","mode","menuOpen","handleMenuBtnClick","changeMode","toggleMenuOpen","className","onClick","this","id","src","alt","height","width","title","React","Component","SideMenu","renderModeMenuItems","profilePicURL","displayName","logOut","FloatingButton","handleClick","LoginPage","handleLoginSubmit","event","a","preventDefault","setState","loginBtnIcon","loginBtnLabel","url","emailInputRef","current","value","fetch","method","res","status","window","open","text","resText","loginMsg","accountCreateStatus","msg","accountCreateMsg","showCreateAccountDialog","cancelCreateAccount","handleOAuthLogin","provider","handleOAuthLoginClick","setTimeout","handleCheckboxChange","checkbox","state","handleSelect","name","target","console","log","newTournament","tournamentAccessCode","scorerAccessCode","createRef","showResetPasswordDialog","githubIcon","githubLabel","bind","style","onSubmit","htmlFor","padding","fontSize","ref","placeholder","pattern","required","type","CoursesMode","COURSELIST","SEARCH","COURSESFORM","ConfigTab","BASIC","LOGO","DIVISIONS","PLAYERS","SCORERS","PUBLISH","TabBar","Config_Basic","fontStyle","Config_Logo","CourseList","renderTable","table","i","courses","length","push","key","location","tees","newMode","handleChangeCoursesMode","CoursesAppMode","undefined","keys","colspan","Courses","reservedStrings","CourseSearch","handleChange","autoCompleteCourses","val","courseDropdown","dropdown","toLocaleLowerCase","indexOf","splitSearchVal","splitCourse","searchVal","search","course","substring","split","includes","setStateCallback","courseSearchRef","focus","fontWeight","textAlign","position","float","paddingTop","marginLeft","top","left","autoComplete","list","size","maxLength","display","onChange","onKeyUp","zIndex","cursor","pointerEvents","CoursesForm","handleSubmit","faIcon","btnLabel","courseData","saveCourse","sName","tName","min","max","class","courseName","locationName","paddingBottom","disabled","courseInList","marginBottom","courseModeToPage","ConfigCourses","stateName","stateVal","coursesMode","addCourse","newData","userObj","headers","body","JSON","stringify","alert","refreshOnUpdate","CoursesModePage","Config_Rounds","Config_Divions","Config_Players","OpenTemplate","updateplayer","onclick","valeu","Config_Scorers","rounds","scorerFirstName","scorerLastName","scorerLoginCode","scoringAssignment","localStorage","setItem","data","parse","getItem","customize","custom","TableList","renderTableCustom","r","colSpan","TableRow","TableRowCustom","Config_Publish","modeToPage","FeedPage","handleChangeMode","ModePage","setCoursesMode","RoundsTable","editRound","setEditId","confirmDelete","setDeleteId","confirm","deleteRound","date","Number","strokes","minutes","seconds","RoundForm","newSec","newSGS","computeSGS","SGS","newStrokes","newMin","roundData","saveRound","sec","today","Date","now","getTimezoneOffset","toISOString","substr","holes","notes","thisRound","startData","rows","cols","Rounds","addRound","editId","_id","deleteId","icon","DirectorMainPage","color","modeTitle","LeaderBoard","App","handleNewTournament","authenticated","response","json","obj","openMenu","closeMenu","prevState","setUserId","Id","userId","then","isAuthenticated","user","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7abd28a1.chunk.js","sourcesContent":["/* AppMode: The enumerated type for AppMode. */\r\n\r\nconst AppMode = {\r\n    LOGIN: \"LoginMode\",\r\n    FEED: \"FeedMode\",\r\n    ROUNDS: \"RoundsMode\",\r\n    ROUNDS_LOGROUND: \"RoundsMode-LogRound\",\r\n    ROUNDS_EDITROUND: \"RoundsMode-EditRound\",\r\n    COURSES: \"CoursesMode\",\r\n    MAIN: \"DirectorMode\",\r\n    LEADERBOARD: \"LeaderboardMode\"\r\n};\r\n\r\nObject.freeze(AppMode); //This ensures that the object is immutable.\r\n\r\nexport default AppMode;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n  getMenuBtnIcon = () => {\r\n      if (this.props.mode === AppMode.ROUNDS_LOGROUND || \r\n          this.props.mode === AppMode.ROUNDS_EDITROUND)\r\n          return \"fa fa-arrow-left\";\r\n      if (this.props.menuOpen)\r\n        return \"fa fa-times\";\r\n      return \"fa fa-bars\";\r\n  }\r\n\r\n  handleMenuBtnClick = () => {\r\n    if (this.props.mode === AppMode.ROUNDS_LOGROUND ||\r\n        this.props.mode === AppMode.ROUNDS_EDITROUND) {\r\n      this.props.changeMode(AppMode.ROUNDS);\r\n    } else if (this.props.mode != AppMode.LOGIN) {\r\n      this.props.toggleMenuOpen();\r\n    }\r\n  }\r\n\r\n    \r\n  render() {\r\n    return (\r\n    <div className=\"navbar\">  \r\n    <span className=\"navbar-items\">\r\n      <button className=\"sidemenu-btn\" onClick={this.handleMenuBtnClick}>\r\n        <span id=\"menuBtnIcon\" className={\"sidemenu-btn-icon \" + this.getMenuBtnIcon()}>\r\n        </span>\r\n      </button>\r\n      <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" alt=\"Speed Score Logo\" height=\"38px\"\r\n      width=\"38px\" />\r\n      <span className=\"navbar-title\">\r\n        &nbsp;{this.props.title}\r\n      </span>\r\n    </span>\r\n  </div>\r\n); \r\n}\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport AppMode from './../AppMode.js'\r\n\r\nclass SideMenu extends React.Component {\r\n\r\n//renderModeItems -- Renders correct subset of mode menu items based on\r\n//current mode, which is stored in this.prop.mode. Uses switch statement to\r\n//determine mode.\r\nrenderModeMenuItems = () => {\r\n  switch (this.props.mode) {\r\n    case AppMode.FEED:\r\n      return(\r\n        <div>\r\n        <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-users\"></span>&nbsp;Main Page</a>\r\n        <a className=\"sidemenu-item \">\r\n            <span className=\"fa fa-search\"></span>&nbsp;LeaderBoard</a>\r\n        </div>\r\n      );\r\n    break;\r\n    case AppMode.ROUNDS:\r\n      return(\r\n        <div>\r\n          <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Log New Round</a>\r\n          <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Search Rounds</a>\r\n        </div>\r\n      );\r\n    break;\r\n    case AppMode.COURSES:\r\n      return(\r\n        <div>\r\n        <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Add a Course</a>\r\n        <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Search Courses</a>\r\n        </div>\r\n      );\r\n    default:\r\n        return null;\r\n    }\r\n}\r\n\r\n    render() {\r\n       return (\r\n        <div className={\"sidemenu \" + (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")}\r\n             onClick={this.props.toggleMenuOpen}>\r\n          {/* SIDE MENU TITLE */}\r\n          <div className=\"sidemenu-title\">\r\n            <img src={this.props.profilePicURL} height='60' width='60' />\r\n            <span id=\"userID\" className=\"sidemenu-userID\">&nbsp;{this.props.displayName}</span>\r\n        </div>\r\n          {/* MENU CONTENT */}\r\n          {this.renderModeMenuItems()}\r\n          {/* The following menu items are present regardless of mode */}\r\n          <a id=\"aboutBtn\" className=\"sidemenu-item\">\r\n            <span className=\"fa fa-info-circle\"></span>&nbsp;About</a>\r\n          <a id=\"logOutBtn\" className=\"sidemenu-item\" onClick={this.props.logOut}>\r\n            <span className=\"fa fa-sign-out-alt\"></span>&nbsp;Log Out</a>\r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React from 'react';\r\n\r\nclass FloatingButton extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className=\"floatbtn\" onClick={this.props.handleClick}>\r\n          <span className=\"floatbtn-icon fa fa-plus\"></span>\r\n        </div>  \r\n      );\r\n    }\r\n}\r\n\r\nexport default FloatingButton;\r\n","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\n\r\nclass ModeBar extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className={\"modebar\" + (this.props.mode === AppMode.LOGIN ? \r\n          \" invisible\" : (this.props.menuOpen ? \" ignore-click visible\" : \" visible\"))}>\r\n        <a className={(this.props.mode === AppMode.FEED ? \" item-selected\" : null)}\r\n            onClick={()=>this.props.changeMode(AppMode.FEED)}>\r\n          <span className=\"modebaricon fa fa-th-list\"></span>\r\n          <span className=\"modebar-text\">Feed</span>\r\n        </a>\r\n        <a className={(this.props.mode === AppMode.ROUNDS || \r\n               this.props.mode === AppMode.ROUNDS_EDITROUND || \r\n               this.props.mode === AppMode.ROUNDS_LOGROUND ? \r\n                  \" item-selected\" : null)}\r\n           onClick={()=>this.props.changeMode(AppMode.ROUNDS)}>\r\n          <span className=\"modebar-icon  fa fa-history\"></span>\r\n          <span className=\"modebar-text\">Rounds</span>\r\n        </a>\r\n        <a className={(this.props.mode === AppMode.COURSES ? \" item-selected\" : null)}\r\n          onClick={()=>this.props.changeMode(AppMode.COURSES)}>\r\n          <span className=\"modebar-icon  fa fa-flag\"></span>\r\n          <span className=\"modebar-text\">Courses</span>\r\n        </a> \r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default ModeBar;\r\n","import React from 'react';\r\nimport AppMode from \"./../AppMode.js\";\r\n\r\nclass LoginPage extends React.Component {\r\n\r\nconstructor() {\r\n    super();\r\n    //Create a ref for the email input DOM element\r\n    this.emailInputRef = React.createRef();\r\n    this.state = {accountCreateMsg: \"\",\r\n                  loginBtnIcon: \"fa fa-sign-in\",\r\n                  loginBtnLabel: \"Director Login\",\r\n                  showCreateAccountDialog: false,\r\n                  showResetPasswordDialog: false,\r\n                  githubIcon: \"fa fa-github\",\r\n                  githubLabel: \"Sign in with GitHub\",\r\n                  loginMsg: \"\",\r\n                  checkbox: false,\r\n                  newTournament: false,\r\n                  tournamentAccessCode: false,\r\n                  scorerAccessCode: false\r\n                  };\r\n} \r\n    \r\n//Focus cursor in email input field when mounted\r\ncomponentDidMount() {\r\n    //this.emailInputRef.current.focus();\r\n}  \r\n\r\n//handleLogin -- Callback function that sets up initial app state upon login.\r\n//handleLogin = () => {\r\n    //Stop spinner\r\n//    this.setState({loginBtnIcon: \"fa fa-sign-in\",\r\n //                  loginBtnLabel: \"Log In\"});\r\n    //Set current user\r\n    //this.props.setUserId(this.emailInputRef.current.value);\r\n    //Trigger switch to FEED mode (default app landing page)\r\n    //this.props.changeMode(AppMode.FEED);\r\n//}\r\n\r\n\r\n//handleLoginSubmit -- Called when user clicks on login button.\r\nhandleLoginSubmit = async (event) => {\r\n\r\n    event.preventDefault();\r\n    this.setState({loginBtnIcon: \"fa fa-spin fa-spinner\",\r\n                   loginBtnLabel: \"Logging In...\"});\r\n    const url = \"auth/login?username=\" + this.emailInputRef.current.value + \"@email.com\" +\r\n                \"&password=\" + \"Password1!\"; // always sets password\r\n    const res = await fetch(url, {method: 'POST'}); \r\n    if (res.status == 200) { //successful login!\r\n        window.open(\"/\",\"_self\");\r\n    } else { //Unsuccessful login\r\n      const resText = await res.text();\r\n      this.setState({loginBtnIcon: \"fa fa-sign-in\",\r\n                     loginBtnLabel: \"Log In\",\r\n                     loginMsg: resText});\r\n    }\r\n}\r\n\r\n  //accountCreateStatus -- Called by child CreateAccountDialog component when \r\n  //user attempted to create new account. Hide the dialog and display \r\n  //a message indicating result of the attempt.\r\n  accountCreateStatus = (msg) => {\r\n      this.setState({accountCreateMsg: msg,\r\n                     showCreateAccountDialog: false});\r\n  }\r\n\r\n  //cancelCreateAccount -- Called by child CreateAccountDialog componenet when user decides\r\n  //to cancel creation of new account by clicking the \"X\" in top-right of dialog.\r\n  cancelCreateAccount = () => {\r\n      this.setState({showCreateAccountDialog: false});\r\n  }\r\n\r\n//handleOAuthLogin -- Callback function that initiates contact with OAuth\r\n//provider\r\nhandleOAuthLogin = (provider) => {\r\n    window.open(`/auth/${provider}`,\"_self\");\r\n}\r\n\r\n//handleOAuthLoginClick -- Called whent the user clicks on button to\r\n//authenticate via a third-party OAuth service. The name of the provider is\r\n//passed in as a parameter.\r\nhandleOAuthLoginClick = (provider) => {\r\n   this.setState({[provider + \"Icon\"] : \"fa fa-spin fa-spinner\",\r\n                  [provider + \"Label\"] : \"Connecting...\"});\r\n   setTimeout(() => this.handleOAuthLogin(provider),1000);\r\n}\r\nhandleCheckboxChange = (value) => {\r\n    this.setState({checkbox: !this.state.checkbox});\r\n}\r\nhandleSelect = (event) => {\r\n    let name = event.target.name;\r\n    if (name === \"newTournament\") {\r\n        console.log(\"new tournament.\")\r\n        this.props.newTournament();\r\n        this.setState({newTournament: !this.state.newTournament});\r\n        this.setState({tournamentAccessCode: false});\r\n        this.setState({scorerAccessCode: false});\r\n    } \r\n    else if (name === \"tournamentAccessCode\") {\r\n        this.setState({newTournament: false});\r\n        this.setState({tournamentAccessCode: !this.state.tournamentAccessCode});\r\n        this.setState({scorerAccessCode: false});\r\n    }\r\n    else if (name === \"scorerAccessCode\") {\r\n        this.setState({newTournament: false});\r\n        this.setState({tournamentAccessCode: false});\r\n        this.setState({scorerAccessCode: !this.state.scorerAccessCode});\r\n    }\r\n}\r\n// newTournament: false,\r\n// tournamentAccessCode: false,\r\n// scorerAccessCode: false\r\n  render() {\r\n    return(\r\n        <div id=\"login-mode-div\" className=\"padded-page\">\r\n        <center>\r\n            <h1 />\r\n            {this.state.accountCreateMsg != \"\" ? <p className=\"emphasis\">{this.state.accountCreateMsg}</p> : null}\r\n            {this.state.loginMsg != \"\" ? <p className=\"emphasis\">{this.state.loginMsg}</p> : null}\r\n            <div className=\"loginContainer\">\r\n                <button id=\"newTournament\" name=\"newTournament\" onClick={this.handleSelect.bind(this)} className=\"btn-color-theme btn btn-block login-btn\"  style={{width : \"21%\"}}>\r\n                <span id=\"login-btn-icon\"/>\r\n                    &nbsp;Create Tournament:\r\n                </button>\r\n                <br></br>\r\n                <p/>\r\n                <button id=\"tournamentAccessCode\" name=\"tournamentAccessCode\" onClick={this.handleSelect.bind(this)} className=\"btn-color-theme btn btn-block login-btn\"  style={{width : \"21%\"}}>\r\n                <span id=\"login-btn-icon\"/>\r\n                    &nbsp;Director Access Code:\r\n                </button>\r\n                <p/>\r\n                {this.state.tournamentAccessCode ?                 \r\n                    <form id=\"loginInterface\" onSubmit={this.handleLoginSubmit}>\r\n                        <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24 }}>\r\n                            <input name='emailInput' ref={this.emailInputRef} className=\"form-control login-text\"\r\n                            placeholder=\"Enter Director Name\"id=\"emailInput\" pattern=\"[A-Za-z0-9._%+-]{2,}\" required={true} />\r\n                        </label>\r\n                        <button name=\"loginBtn\" id=\"loginBtn\" type=\"submit\" style={{width : \"5%\"}}>\r\n                            <span id=\"login-btn-icon\" className={this.state.loginBtnIcon}/>\r\n                                &nbsp;{\"Submit\"}\r\n                        </button>\r\n                        \r\n                    </form>\r\n                    : null}\r\n                <br></br>\r\n                <button id=\"scorerAccessCode\" name=\"scorerAccessCode\" onClick={this.handleSelect.bind(this)} className=\"btn-color-theme btn btn-block login-btn\" style={{width : \"21%\"}}>\r\n                <span id=\"login-btn-icon\"/>\r\n                    &nbsp;Scorer Access Code:\r\n                </button>\r\n                <p/>\r\n                {this.state.scorerAccessCode ?                 \r\n                    <form id=\"loginInterface\" onSubmit={this.handleLoginSubmit}>\r\n                        <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24 }}>\r\n                            <input name='emailInput' ref={this.emailInputRef} className=\"form-control login-text\"\r\n                            placeholder=\"Enter Scorer Name\"id=\"emailInput\" pattern=\"[A-Za-z0-9._%+-]{2,}\" required={true} />\r\n                        </label>\r\n                        <button name=\"loginBtn\" id=\"loginBtn\" type=\"submit\" style={{width : \"5%\"}}>\r\n                            <span id=\"login-btn-icon\" className={this.state.loginBtnIcon}/>\r\n                                &nbsp;{\"Submit\"}\r\n                        </button>\r\n                        <p/>\r\n                    </form>\r\n                    : null}\r\n            </div>\r\n        </center>\r\n        </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default LoginPage;","/* CoursesAppMode: The enumerated type for CoursesAppMode. */\r\n\r\nconst CoursesMode = {\r\n    COURSELIST: \"CourseListMode\",\r\n    SEARCH: \"SearchMode\",\r\n    COURSESFORM: \"CoursesForm\"\r\n}\r\n\r\nObject.freeze(CoursesMode);\r\n\r\nexport default CoursesMode;","/* ConfigTab: The enumerated type for  ConfigTab. */\r\n\r\nconst  ConfigTab = {\r\n    BASIC: \"BasicInfoMode\",\r\n    LOGO: \"LogoMode\",\r\n    COURSES: \"CoursesMode\",\r\n    ROUNDS: \"RoundsMode\",\r\n    DIVISIONS: \"DivionsMode\",\r\n    PLAYERS: \"PlayersMode\",\r\n    SCORERS: \"ScorersMode\",\r\n    PUBLISH: \"PublishMode\"\r\n};\r\n\r\nObject.freeze(ConfigTab); //This ensures that the object is immutable.\r\n\r\nexport default  ConfigTab;","import React from 'react';\r\nimport ConfigTab from '../ConfigTab.js';\r\n\r\nclass TabBar extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className=\"tabbar\">\r\n        <a className={(this.props.mode === ConfigTab.BASIC ? \" item-selected\" : null)}\r\n            onClick={()=>this.props.changeMode(ConfigTab.BASIC)}>\r\n          <span className=\"tabbar-text\">Basic Info</span>\r\n        </a>\r\n        <a className={(this.props.mode === ConfigTab.LOGO ? \" item-selected\" : null)}\r\n           onClick={()=>this.props.changeMode(ConfigTab.LOGO)}>\r\n          <span className=\"tabbar-text\">Logo + Colors</span>\r\n        </a>\r\n        <a id=\"coursesTab\" className={(this.props.mode === ConfigTab.COURSES ? \" item-selected\" : null)}\r\n          onClick={()=>this.props.changeMode(ConfigTab.COURSES)}>\r\n          <span className=\"tabbar-text\">Courses</span>\r\n        </a> \r\n        <a className={(this.props.mode === ConfigTab.ROUNDS ? \" item-selected\" : null)}\r\n          onClick={()=>this.props.changeMode(ConfigTab.ROUNDS)}>\r\n          <span className=\"tabbar-text\">Rounds</span>\r\n        </a> \r\n        <a className={(this.props.mode === ConfigTab.DIVISIONS ? \" item-selected\" : null)}\r\n          onClick={()=>this.props.changeMode(ConfigTab.DIVISIONS)}>\r\n          <span className=\"tabbar-text\">Divisions</span>\r\n        </a> \r\n        <a className={(this.props.mode === ConfigTab.PLAYERS ? \" item-selected\" : null)}\r\n          onClick={()=>this.props.changeMode(ConfigTab.PLAYERS)}>\r\n          <span className=\"tabbar-text\">Players</span>\r\n        </a> \r\n        <a className={(this.props.mode === ConfigTab.SCORERS ? \" item-selected\" : null)}\r\n          onClick={()=>this.props.changeMode(ConfigTab.SCORERS)}>\r\n          <span className=\"tabbar-text\">Scorers</span>\r\n        </a> \r\n        <a className={(this.props.mode === ConfigTab.PUBLISH ? \" item-selected\" : null)}\r\n          onClick={()=>this.props.changeMode(ConfigTab.PUBLISH)}>\r\n          <span className=\"tabbar-text\">Publish</span>\r\n        </a> \r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default TabBar;","import React from 'react';\r\n\r\nclass Config_Basic extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >Basic Info</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default Config_Basic;","import React from 'react';\r\n\r\nclass Config_Logo extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >Logo</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default  Config_Logo;","import React from 'react';\r\nimport CoursesAppMode from './../CoursesAppMode';\r\n\r\n//NOTE -- Should add a Delete button for the courses even though the original website doesn't\r\n//have any\r\nclass CourseList extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n    }\r\n\r\n    //renderTable -- render an HTML5 table displaying the courses logged \r\n    //by the director and providing a button to edit each course\r\n    renderTable = () => {\r\n        let table = [];\r\n        for (let i = 0; i < this.props.courses.length; i++) {\r\n            table.push(\r\n                <tr key={i}>\r\n                    <td>{this.props.courses[i].name}</td>\r\n                    <td>{this.props.courses[i].location}</td>\r\n                    <td>{this.props.courses[i].tees}</td>\r\n                    <td>\r\n                        <button>\r\n                            <span className=\"fa fa-edit\">&nbsp;</span>\r\n                            Edit...\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n        return table;\r\n    }\r\n\r\n    //render -- renders the entire courses table along with a header for the table\r\n    //displaying a \"No Courses Logged\" message in case the table is empty\r\n    render() {\r\n        return (\r\n            <div id=\"coursesListDiv\" className=\"coursesListDiv\">\r\n                <button id=\"addCourseBtn\" className=\"btn-color-theme btn btn-primary btn-block\" \r\n                    onClick={(newMode) => this.props.handleChangeCoursesMode(CoursesAppMode.SEARCH)}>\r\n                    <span className=\"fa fa-plus\">&nbsp;</span>\r\n                Add Course...\r\n            </button>\r\n                <label id=\"coursesListLabel\" className=\"coursesListLabel\">\r\n                    Courses\r\n                </label>\r\n                <div id=\"coursesTableDiv\" className=\"coursesTableDiv\">\r\n                    <h1></h1>\r\n                    <table className=\"table table-hover\">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Location</th>\r\n                                <th>Tees</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.props.courses == undefined || Object.keys(this.props.courses).length == 0 ?\r\n                                <tr>\r\n                                    <td colspan=\"4\" style={{ fontStyle: \"italic\" }}>No Courses Logged</td>\r\n                                </tr>\r\n                                :\r\n                                this.renderTable()\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CourseList;","const Courses = [\r\n    \"Windross Farm Golf Course (Auckland, NZ)\", \"Turning Stone Shenendoah Women's (Verona, NY, USA)\", \"Turning Stone Shenendoah Sprintgolf (Verona, NY, USA)\", \r\n    \"Turning Stone Shenendoah Men's (Verona, NY, USA)\", \"Tapiola Golf Yellow (Espoo, Finland)\", \"SWEETWOODS PARK GOLF Y & R (EDENBRIDGE)\", \r\n    \"Sunriver Meadows White (Sunriver, OR)\", \"Sunriver Meadows Red (Sunriver, OR)\", \"Spring Valley Country Club White (Salem, WI)\",\r\n    \"Spring Valley Country Club Red (Salem, WI)\", \"Spring Valley Country Club Blue (Salem, WI)\", \"Rome Country Club Womens (Rome, NY, USA)\",\r\n    \"Rome Country Club Sprintgolf (Rome, NY, USA)\", \"Rome Country Club Mens (Rome, NY, USA)\", \"Rivercut Golf Course White (Springfield, Missouri, U.S.A)\",\r\n    \"Pennant Hills Golf Club White (Sydney, Australia)\", \"Pennant Hills Golf Club Red (Sydney, Australia)\", \"Palouse Ridge Golf Club Gray (Pullman, WA USA)\",\r\n    \"Oneway Golf Club Men (Tsuchiura, Ibaraki, Japan)\", \"Oneway Golf Club Ladies (Tsuchiura, Ibaraki, Japan)\", \"Mountain Top Golf Course Back (Hollister, MO)\",\r\n    \"Mountain Top Golf Course Back (Hollister, MO)\", \"Mountain Top Golf Course Back (Hollister, MO)\", \"Glenoaks Golf & Country Club Senior's White (Prospect, KY)\", \r\n    \"Glenoaks Golf & Country Club Senior's White (Prospect, KY)\", \"Esmeralda Golf Course White (Spokane, WA, USA)\", \"Cascata Golf Course White (Boulder City, Nevada)\",\r\n    \"Bryden Canyon Golf Course White (Lewiston, ID)\", \"Blackhorse Golf Club - South Course White (Cypress, TX)\", \"Blackhorse Golf Club - South Course Red (Cypress, TX)\",\r\n    \"Blackhorse Golf Club - South Course Blue (Cypress, TX)\", \"Bing Maloney Golf Course White (Sacramento, CA)\", \"Bing Maloney Golf Course Red (Sacramento, CA)\",\r\n    \"Arrowhead Golf Club Blue (Molalla, OR)\", \"Albert Park Golf Course (Melbourne, Australia)\"\r\n]\r\n\r\nObject.freeze(Courses);\r\n\r\nexport default Courses;","import React from 'react';\r\nimport Courses from './../Courses.js';\r\nimport CoursesAppMode from './../CoursesAppMode.js';\r\n\r\nconst reservedStrings = [\r\n    \"Women's\", \"Men's\", \"Sprintgolf\", \"Yellow\", \"Blue\", \"Red\", \"White\", \"Womens\", \"Mens\", \"Gray\", \"Men\", \"Women\", \"Ladies\", \"Back\"\r\n];\r\n\r\nclass CourseSearch extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.courseSearchRef = React.createRef();\r\n        this.state = {\r\n            search: \"\",\r\n            dropdown: undefined\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.autoCompleteCourses = this.autoCompleteCourses.bind(this);\r\n        this.splitSearchVal = this.splitSearchVal.bind(this);\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.courseSearchRef.current.focus();\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        this.setState({ [name]: event.target.value });\r\n    }\r\n\r\n    autoCompleteCourses = (event) => {\r\n        var val = event.target.value;\r\n        let courseDropdown = Courses;\r\n        let dropdown = [];\r\n        for (var i = 0; i < courseDropdown.length; i++) {\r\n            if (((courseDropdown[i].toLocaleLowerCase()).indexOf(val.toLocaleLowerCase())) > - 1) {\r\n                dropdown.push(\r\n                    <option value={courseDropdown[i]}></option>\r\n                );\r\n            }\r\n        }\r\n        this.setState({ dropdown: dropdown });\r\n    }\r\n\r\n    splitSearchVal = () => {\r\n        var searchVal = this.state.search;\r\n        var splitSearchVal;\r\n        var location;\r\n        var coursePreSplit;\r\n        var splitCourse;\r\n        var course = \"\";\r\n        var tees;\r\n        if (searchVal[searchVal.length - 1] == \")\") {\r\n            searchVal = searchVal.substring(0, searchVal.length - 1);\r\n        }\r\n        splitSearchVal = searchVal.split('(');\r\n        location = splitSearchVal[1];\r\n        coursePreSplit = splitSearchVal[0];\r\n        splitCourse = coursePreSplit.split(' ');\r\n        for (var i = 0; i < splitCourse.length; i++) {\r\n            if (reservedStrings.includes(splitCourse[i])) {\r\n                tees = splitCourse[i];\r\n                delete splitCourse[i];\r\n                continue;\r\n            }\r\n            course += splitCourse[i] + \" \";\r\n        }\r\n        this.props.setStateCallback(\"courseName\", course);\r\n        this.props.setStateCallback(\"locationName\", location);\r\n        this.props.setStateCallback(\"tees\", tees);\r\n    }\r\n\r\n    handleSelect = () => {\r\n        var searchVal = this.state.search;\r\n        if (Courses.includes(searchVal)) {\r\n            this.splitSearchVal();\r\n            this.props.setStateCallback(\"courseInList\", true);\r\n        }\r\n        else {\r\n            this.props.setStateCallback(\"courseInList\", false);\r\n            this.props.setStateCallback(\"courseName\", searchVal);\r\n        }\r\n        this.props.handleChangeCoursesMode(CoursesAppMode.COURSESFORM);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ fontSize: \"x-large\", fontWeight: \"bold\", textAlign: \"left\", }}>\r\n                <span className=\"fa fa-search\" style={{ position: \"relative\", float: \"left\", paddingTop: \"41px\", marginLeft: \"7px\", top: \"5px\", left: \"40px\" }}></span>\r\n                Find a Course:\r\n                <ul>\r\n\r\n                    <input id=\"searchInput\" ref={this.courseSearchRef} autoComplete=\"off\" list=\"coursesList\" name=\"search\" className=\"form-control form-center\" type=\"text\" value={this.state.search}\r\n                        placeholder=\"Search for course...\" size=\"50\" maxLength=\"50\" style={{ display: \"inline-block\", width: \"80%\" }}\r\n                        onChange={this.handleChange} onKeyUp={this.autoCompleteCourses} onClick={this.autoCompleteCourses}>\r\n                    </input>\r\n                    <datalist id=\"coursesList\">\r\n                        {this.state.dropdown}\r\n                    </datalist>\r\n                    &nbsp;\r\n                    <div style={this.state.search <= 0 ? { width: \"75px\", height: \"40px\", zIndex: \"10\", display: \"inline-block\", cursor: \"not-allowed\"} : {width: \"75px\", height: \"40px\", zIndex: \"10\", display: \"inline-block\"}}>\r\n                        <button id=\"selectCourseBtn\" className=\"btn-color-theme btn btn-primary btn-block\" style={this.state.search.length > 0 ?\r\n                            { display: \"inline-block\", width: \"75px\" } : { display: \"inline-block\", width: \"75px\", pointerEvents: \"none\" }}\r\n                            onClick={this.handleSelect}>\r\n                            Select\r\n                    </button>\r\n                    </div>\r\n                    &nbsp;\r\n                    <button id=\"cancelCourseBtn\" className=\"btn btn-danger btn-block\" style={{ display: \"inline-block\", width: \"75px\", position: \"relative\" }}\r\n                        onClick={(newMode) => this.props.handleChangeCoursesMode(CoursesAppMode.COURSELIST)}>Cancel</button>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CourseSearch;","import React from 'react';\r\nimport CoursesAppMode from './../CoursesAppMode.js';\r\n\r\nclass CoursesForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            faIcon: \"fa fa-save\",\r\n            btnLabel: \"Save Course Data\",\r\n            name: this.props.courseName,\r\n            location: this.props.locationName,\r\n            tees: this.props.tees\r\n        }\r\n        this.renderTable = this.renderTable.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        var sName;\r\n        var tName;\r\n        for (var i = 0; i < 18; i++) {\r\n            sName = \"s\" + i;\r\n            tName = \"t\" + i;\r\n            this.setState({ [sName]: \"3\", [tName]: \"\" });\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        this.setState({ [name]: event.target.value });\r\n    }\r\n\r\n    //handleSubmit -- When the user clicks on the button to save/update the\r\n    //course, start the spinner and invoke the parent component's saveCourse\r\n    //method to do the actual work. Note that saveCourse is set to the correct\r\n    //parent method based on whether the user is logging a new course or editing\r\n    //an existing round.\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        //start spinner\r\n        this.setState({\r\n            faIcon: \"fa fa-spin fa-spinner\",\r\n            btnLabel: \"Saving...\"\r\n        });\r\n        //Prepare current round data to be saved\r\n        let courseData = this.state;\r\n        delete courseData.btnLabel;\r\n        delete courseData.faIcon;\r\n        //call saveRound on 1 second delay to show spinning icon\r\n        setTimeout(this.props.saveCourse, 1000, courseData);\r\n        event.preventDefault();\r\n    }\r\n\r\n    renderTable = () => {\r\n        var sName;\r\n        var tName;\r\n        let table = [];\r\n        for (let i = 0; i < 18; i++) {\r\n            sName = \"s\" + i;\r\n            tName = \"t\" + i;\r\n            table.push(\r\n                <tr key={i}>\r\n                    <td>{i + 1}</td>\r\n                    <td>\r\n                        <input id={\"s\" + i} name={\"s\" + i} className=\"form-control form-center\" type=\"number\" min=\"3\" max=\"6\" value={this.state[sName]} required={i < 9 ? true : false} style={{ width: \"7%\", textAlign: \"center\" }} onChange={(event) => this.handleChange(event)}></input>\r\n                    </td>\r\n                    <td>\r\n                        <input id={\"t\" + i} name={\"t\" + i} class=\"form-control form-center\" type=\"text\" pattern=\"0:[0-9]:[0-5][0-9]\" required={i < 9 ? true : false} style={{ width: \"15%\" }} value={this.state[tName]} onChange={(event) => this.handleChange(event)}></input>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n        return table;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ paddingBottom: \"20px\" }}>\r\n                <h3>Add Existing Course to Tournament</h3>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <ul style={{ paddingBottom: \"50px\" }}>\r\n                        <div style={{ display: \"inline-block\", fontWeight: \"bold\", fontSize: \"large\", float: \"left\" }}>\r\n                            Course Name: &nbsp;\r\n                        </div>\r\n                        <input id=\"courseInput\" name=\"name\" class=\"form-control form-center\" style={{ display: \"inline-block\", width: \"30%\", float: \"left\" }} size=\"30\" disabled={this.props.courseInList ? true : false} value={this.props.courseInList ? this.props.courseName : this.state.name} onChange={this.handleChange}></input>\r\n                    </ul>\r\n                    <ul style={{ paddingBottom: \"50px\" }}>\r\n                        <div style={{ display: \"inline-block\", fontWeight: \"bold\", fontSize: \"large\", float: \"left\" }}>\r\n                            Location: &nbsp;\r\n                        </div>\r\n                        <input id=\"locationInput\" name=\"location\" class=\"form-control form-center\" style={{ display: \"inline-block\", width: \"30%\", float: \"left\" }} size=\"30\" disabled={this.props.courseInList ? true : false} value={this.props.courseInList ? this.props.locationName : this.state.location} onChange={this.handleChange}></input>\r\n                    </ul>\r\n                    <ul style={{ paddingBottom: \"50px\" }}>\r\n                        <div style={{ display: \"inline-block\", fontWeight: \"bold\", fontSize: \"large\", float: \"left\" }}>\r\n                            Tees: &nbsp;\r\n                        </div>\r\n                        <input id=\"teesInput\" name=\"tees\" class=\"form-control form-center\" style={{ display: \"inline-block\", width: \"30%\", float: \"left\" }} size=\"30\" disabled={this.props.courseInList ? true : false} value={this.props.courseInList ? this.props.tees : this.state.tees} onChange={this.handleChange}></input>\r\n                    </ul>\r\n                    <ul style={{ paddingBottom: \"50px\" }}>\r\n                        <div style={{ display: \"inline-block\", fontWeight: \"bold\", fontSize: \"large\", float: \"left\" }}>\r\n                            Number of Holes on Course: &nbsp;\r\n                        </div>\r\n                        <select style={{ display: \"inline-block\", width: \"2.2%\", float: \"left\", textAlign: \"center\" }} value=\"18\">\r\n                            <option value=\"18\">18</option>\r\n                            <option value=\"9\" disabled=\"true\">9</option>\r\n                        </select>\r\n                    </ul>\r\n                    <div style={{ fontWeight: \"bold\", fontSize: \"large\", float: \"left\" }}>\r\n                        Hole Stroke &amp; Time Pars:\r\n                    </div>\r\n                    <h1></h1>\r\n                    <table className=\"table table-hover\">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <th>Hole #</th>\r\n                                <th>Stroke Par</th>\r\n                                <th>Time Par</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.renderTable()}\r\n                        </tbody>\r\n                    </table>\r\n                    <p></p>\r\n                    <p></p>\r\n                    <button id=\"submitCourseBtn\" type=\"submit\" style={{ width: \"70%\", fontSize: \"36px\", marginBottom: \"10px\" }}\r\n                        className=\"btn btn-primary btn-color-theme\">\r\n                        <span className={this.state.faIcon} />&nbsp;{this.state.btnLabel}\r\n                    </button>\r\n                    <button id=\"cancelCourseBtn\" className=\"btn btn-danger btn-block\" style={{width: \"70%\"}} onClick={(newMode) => this.props.handleChangeCoursesMode(CoursesAppMode.SEARCH)}>\r\n                        Cancel\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CoursesForm;","import React from 'react';\r\nimport CourseList from './CourseList.js';\r\nimport CourseSearch from './CourseSearch';\r\nimport CoursesForm from './CoursesForm.js';\r\nimport CoursesAppMode from './../CoursesAppMode.js';\r\nimport AppMode from './../AppMode.js';\r\nimport App from './App.js';\r\nimport { async } from 'regenerator-runtime';\r\n\r\nconst courseModeToPage = {};\r\ncourseModeToPage[CoursesAppMode.COURSELIST] = CourseList;\r\ncourseModeToPage[CoursesAppMode.SEARCH] = CourseSearch;\r\ncourseModeToPage[CoursesAppMode.COURSESFORM] = CoursesForm;\r\n\r\nclass ConfigCourses extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            coursesMode: this.props.coursesMode,\r\n            courseInList: false\r\n        }\r\n        this.addCourse = this.addCourse.bind(this);\r\n    }\r\n\r\n    setStateCallback = (stateName, stateVal) => {\r\n        this.setState({[stateName]: stateVal});\r\n    }\r\n\r\n    handleChangeCoursesMode = (newMode) => {\r\n        this.setState({coursesMode: newMode})\r\n    }\r\n\r\n    //addCourse -- Given an object newData containing a new course, use the \r\n    //server POST route to add the new round to the database. If the add is\r\n    //successful, call on the refreshOnUpdate() method to force the parent\r\n    //App component to refresh its state from the database and re-render itself,\r\n    //allowing the change to be propagated to the Rounds table. Then switch\r\n    //the mode back to AppMode.FEED since the user is done adding a round.\r\n    addCourse = async (newData) => {\r\n        const url = '/courses/' + this.props.userObj.id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(newData)\r\n        });\r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            alert(\"An error occurred when attempting to add new course to database: \"\r\n                + msg);\r\n            this.handleChangeCoursesMode(CoursesAppMode.COURSELIST);\r\n        } else {\r\n            this.handleChangeCoursesMode(CoursesAppMode.COURSELIST);\r\n            this.props.refreshOnUpdate(AppMode.FEED);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const CoursesModePage = courseModeToPage[this.state.coursesMode];\r\n        return (\r\n            <CoursesModePage \r\n                courses={this.props.userObj.courses}\r\n                handleChangeCoursesMode={this.handleChangeCoursesMode}\r\n                setStateCallback={this.setStateCallback}\r\n                courseName={this.state.courseName}\r\n                locationName={this.state.locationName}\r\n                courseInList={this.state.courseInList}\r\n                saveCourse={this.addCourse}\r\n            />\r\n        );\r\n    }   \r\n}\r\n\r\nexport default ConfigCourses;","import React from 'react';\r\n\r\nclass Config_Rounds extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"padded-page\">\r\n            <center>\r\n            <h1 > Publish</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n            height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n          </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default  Config_Rounds;","import React from 'react';\r\n\r\nclass Config_Divions extends React.Component {\r\n\r\n    render() {\r\n      return (\r\n        <div className=\"padded-page\">\r\n        <center>\r\n        <h1 > Publish</h1>\r\n        <h2>This page is under construction.</h2>\r\n        <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n        height=\"200\" width=\"200\"/>\r\n        <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n        </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default Config_Divions;","import React from 'react';\r\n\r\nclass Config_Players extends React.Component {\r\n\r\n    OpenTemplate = () => {\r\n        window.open(\"https://docs.google.com/spreadsheets/d/1bqkKUSjTG4PQ9vPV1aAL-X3i8JJUIIeCmxxP2dGaIqk/edit#gid=0\", '_black');\r\n    }\r\n\r\n    updateplayer = () => {\r\n        \r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <div className = \"player-page\">\r\n            <label><b>Player Roster Link:</b></label>\r\n            <button onclick={this.OpenTemplate}>Get Roster Template</button>\r\n            <br/>\r\n            <form className = \"player-link-form\">\r\n                <br/>\r\n                <input type=\"text\" valeu = \"\" name=\"sharelink\" size=\"100\"/>\r\n                <button onclick={this.updateplayer}>Update Player Roster</button>\r\n            </form>\r\n            </div>\r\n            <div className = \"tabbar\">\r\n            <a>\r\n                <span className=\"tabbar-text\">Current Player Roster</span>\r\n            </a>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n        \r\n        );\r\n    }   \r\n}\r\n\r\nexport default  Config_Players;","import React from 'react';\r\n\r\nclass Config_Scorers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n          this.state = {\r\n            customize: false,\r\n            rounds : [ ]\r\n          };\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        console.log(name);\r\n        if (name === \"scorerFirstName\") {\r\n            this.setState({[this.state.rounds[0].scorerFirstName]: event.target.value});\r\n            this.state.rounds[0].scorerFirstName = event.target.value;\r\n        } else if (name === \"scorerLastName\") {\r\n            this.setState({[this.state.rounds[0].scorerLastName]: event.target.value});\r\n            this.state.rounds[0].scorerLastName = event.target.value;\r\n        } else if (name === \"scorerLoginCode\") {\r\n            this.setState({[this.state.rounds[0].scorerLoginCode]: event.target.value});\r\n            this.state.rounds[0].scorerLoginCode = event.target.value;\r\n        } else if (name === \"scoringAssignment\") {\r\n            this.setState({[this.state.rounds[0].scoringAssignment]: event.target.value});\r\n            this.state.rounds[0].scoringAssignment = event.target.value;\r\n        }\r\n        else if(name === \"customize\") {\r\n            this.setState({[name]: event.target.value});\r\n        }\r\n        else \r\n        {\r\n            this.setState({[event.target.name]: event.target.value});\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        console.log(\"Submit\");\r\n        localStorage.setItem(\"scorers\", JSON.stringify(this.state.rounds));\r\n        let data = JSON.parse(localStorage.getItem(\"scorers\"));\r\n        console.log(data);\r\n        //start spinner\r\n        // this.setState({faIcon: \"fa fa-spin fa-spinner\",\r\n                        // btnLabel: (this.props.mode === AppMode.ROUNDS_LOGROUND ? \r\n                        //             \"Saving...\" : \"Updating...\")});\r\n        //Prepare current round data to be saved\r\n        // let roundData = this.state;\r\n        // delete roundData.faIcon;\r\n        // delete roundData.btnLabel;\r\n        //call saveRound on 1 second delay to show spinning icon\r\n        // setTimeout(this.props.saveRound,1000,roundData); \r\n        // event.preventDefault(); \r\n        }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 > Scorers</h1>\r\n            <p></p>\r\n          <label>Would you like to customize scorer names and login codes?\r\n          <select name=\"customize\" value={this.state.customize} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value={false}>No</option>\r\n            <option value={true}>Yes</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <table className=\"table table-hover\">\r\n            <thead className=\"thead-light\">\r\n            <tr>\r\n                <th>SCORER LAST NAME</th>\r\n                <th>SCORER FIRST NAME</th>\r\n                <th>SCORER LOGIN CODE</th>\r\n                <th>SCORING ASSIGNMENT</th>\r\n            </tr>\r\n            </thead>\r\n             <TableList\r\n                rounds={this.state.rounds}\r\n                custom={this.state.customize}\r\n                handleChange={this.handleChange}\r\n                />\r\n            </table>\r\n            <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} onClick={this.handleSubmit} \r\n                className=\"btn btn-primary btn-color-theme login-btn\">\r\n              <span className=\"fa fa-edit\"/>&nbsp;Save Scorers\r\n          </button>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\nclass TableList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.renderTable = this.renderTable.bind(this);\r\n        this.renderTableCustom = this.renderTableCustom.bind(this);\r\n    }\r\n    renderTableCustom = () => {\r\n        let table = [];\r\n        for (let r = 0; r < this.props.rounds.length; ++r) {\r\n            table.push(\r\n            <TableRowCustom\r\n                handleChange= {this.props.handleChange}\r\n                scorerFirstName = {this.props.rounds[r].scorerFirstName}\r\n                scorerLastName = {this.props.rounds[r].scorerLastName}\r\n                scorerLoginCode = {this.props.rounds[r].scorerLoginCode}\r\n                scoringAssignment = {this.props.rounds[r].scoringAssignment}\r\n            />\r\n            );\r\n        }  \r\n        return table;\r\n    }\r\n    renderTable = () => {\r\n        let table = [];\r\n        for (let r = 0; r < this.props.rounds.length; ++r) {\r\n            table.push(\r\n            <TableRow \r\n                scorerFirstName = {this.props.rounds[r].scorerFirstName}\r\n                scorerLastName = {this.props.rounds[r].scorerLastName}\r\n                scorerLoginCode = {this.props.rounds[r].scorerLoginCode}\r\n                scoringAssignment = {this.props.rounds[r].scoringAssignment}/>\r\n            );\r\n        }\r\n        return table;\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n        <tbody>\r\n            {\r\n                Object.keys(this.props.rounds).length === 0 ?\r\n                <tr>\r\n                 <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\r\n                </tr> :  this.props.custom ? this.renderTableCustom() : this.renderTable()\r\n            }\r\n        </tbody>\r\n        );\r\n    }\r\n}\r\nclass TableRow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return ( \r\n            <tr>\r\n                <td>{this.props.scorerFirstName}</td>\r\n                <td>{this.props.scorerLastName}</td>\r\n                <td>{this.props.scorerLoginCode}</td>\r\n                <td>{this.props.scoringAssignment}</td>\r\n            </tr> \r\n        );\r\n    }\r\n}\r\nclass TableRowCustom extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return ( \r\n            <tr>\r\n                <td><input name=\"scorerFirstName\" size=\"25\" type=\"text\"\r\n                    value={this.props.scorerFirstName} onChange={this.props.handleChange}/></td>\r\n                <td><input name=\"scorerLastName\" size=\"25\" type=\"text\"\r\n                    value={this.props.scorerLastName} onChange={this.props.handleChange}/></td>\r\n                <td><input name=\"scorerLoginCode\" size=\"25\" type=\"text\"\r\n                    value={this.props.scorerLoginCode} onChange={this.props.handleChange}/></td>\r\n                <td><input name=\"scoringAssignment\" size=\"25\" type=\"text\"\r\n                    value={this.props.scoringAssignment} onChange={this.props.handleChange}/></td>\r\n            </tr> \r\n        );\r\n    }\r\n}\r\n\r\nexport default  Config_Scorers;","import React from 'react';\r\n\r\nclass Config_Publish extends React.Component {\r\n\r\n    handleSubmit = (event) => {\r\n        console.log(\"Publish\");\r\n        // localStorage.setItem(\"scorers\", JSON.stringify(this.state.rounds));\r\n        // let data = JSON.parse(localStorage.getItem(\"scorers\"));\r\n        // console.log(data);\r\n\r\n        }\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 > Tournament Settings</h1>\r\n            \r\n            <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} onClick={this.handleSubmit} \r\n                className=\"btn btn-primary btn-color-theme login-btn\">\r\n              <span className=\"fa fa-edit\"/>&nbsp;Save Scorers\r\n          </button>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default   Config_Publish;","import React from 'react';\r\nimport ConfigTab from '../ConfigTab.js';\r\nimport TabBar from './TabBar.js';\r\nimport Config_Basic from './Config_Basic.js';\r\nimport Config_Logo from './Config_Logo.js';\r\nimport ConfigCourses from './ConfigCourses.js';\r\nimport Config_Rounds from './Config_Rounds.js';\r\nimport Config_Divions from './Config_Divisions.js';\r\nimport Config_Players from './Config_Players.js';\r\nimport Config_Scorers from './Config_Scorers.js';\r\nimport Config_Publish from './Config_Publish.js';\r\n\r\nconst modeToPage = {};\r\nmodeToPage[ConfigTab.BASIC] = Config_Basic;\r\nmodeToPage[ConfigTab.LOGO] = Config_Logo;\r\nmodeToPage[ConfigTab.COURSES] = ConfigCourses;\r\nmodeToPage[ConfigTab.ROUNDS] = Config_Rounds;\r\nmodeToPage[ConfigTab.DIVISIONS] = Config_Divions;\r\nmodeToPage[ConfigTab.PLAYERS] = Config_Players;\r\nmodeToPage[ConfigTab.SCORERS] = Config_Scorers;\r\nmodeToPage[ConfigTab.PUBLISH] = Config_Publish;\r\n\r\nclass FeedPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {mode: ConfigTab.COURSES, //Used for Courses testing. RESET to ConfigTab.COURSES when done\r\n                      menuOpen: false,\r\n                     };\r\n      }\r\n\r\n    handleChangeMode = (newMode) => {\r\n        if (newMode == \"LOGIN\") {\r\n          window.open(`/auth/logout`,\"_self\");\r\n        }\r\n        this.setState({mode: newMode});\r\n      }\r\n\r\n    render() {\r\n        const ModePage = modeToPage[this.state.mode];\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >Tournament Settings</h1>\r\n            <TabBar \r\n                 mode={this.state.mode} \r\n                 changeMode={this.handleChangeMode}\r\n                 menuOpen={this.state.menuOpen}/>\r\n            <ModePage \r\n                userObj={this.props.userObj}\r\n                menuOpen={this.state.menuOpen}\r\n                mode={this.state.mode}\r\n                changeMode={this.handleChangeMode}\r\n                refreshOnUpdate={this.props.refreshOnUpdate}\r\n                coursesMode={this.props.coursesMode}\r\n                setCoursesMode={this.props.setCoursesMode}\r\n                />\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default FeedPage;","import React from 'react';\r\nimport AppMode from './../AppMode.js';\r\n\r\nclass RoundsTable extends React.Component {\r\n\r\n  //editRound -- Triggered when the user clicks the edit button for a given\r\n  //round. The id param is the unique property that identifies the round.\r\n  //Set the state variable representing the id of the round to be edited and\r\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\r\n  //chosen round.\r\n  editRound = (id) => {\r\n    this.props.setEditId(id);\r\n    this.props.changeMode(AppMode.ROUNDS_EDITROUND);\r\n  }\r\n\r\n  //confirmDelete -- Triggered when the user clicks the delete button\r\n  //for a given round. The id paam is the unique property that \r\n  //identifies the round. Set the state variable representing the id\r\n  //of the round to be deleted and then present a dialog box asking\r\n  //the user to confirm the deletion.\r\n  //TO DO: Implement the confirmation dialog box. For now, we\r\n  //present alert box placeholder\r\n  confirmDelete = (id) => {\r\n    this.props.setDeleteId(id);\r\n    var result = window.confirm(\"Are you sure you want to delete?\");\r\n    if(result) \r\n    {\r\n      this.props.deleteRound();\r\n    }\r\n  }\r\n\r\n\r\n  //renderTable -- render an HTML table displaying the rounds logged\r\n  //by the current user and providing buttons to view/edit and delete each round.\r\n  renderTable = () => {\r\n  let table = [];\r\n  for (let r = 0; r < this.props.rounds.length; ++r) {\r\n    table.push(\r\n      <tr key={r}>\r\n        <td>{this.props.rounds[r].date.substring(0,10)}</td>\r\n        <td>{this.props.rounds[r].course}</td>\r\n        <td>{(Number(this.props.rounds[r].strokes) + \r\n              Number(this.props.rounds[r].minutes)) +\r\n              \":\" + (this.props.rounds[r].seconds < 10 ?  \r\n                \"0\" + this.props.rounds[r].seconds :\r\n                this.props.rounds[r].seconds) + \" (\" + \r\n              this.props.rounds[r].strokes + \r\n              \" in \" + this.props.rounds[r].minutes + \":\" + \r\n              (this.props.rounds[r].seconds < 10 ?  \r\n                \"0\" + this.props.rounds[r].seconds :\r\n                this.props.rounds[r].seconds) + \")\"}\r\n        </td>\r\n        <td><button onClick={this.props.menuOpen ? null : () => \r\n          this.editRound(r)}>\r\n              <span className=\"fa fa-eye\"></span></button></td>\r\n        <td><button onClick={this.props.menuOpen ? null : \r\n          () => this.confirmDelete(r)}>\r\n              <span className=\"fa fa-trash\"></span></button></td>\r\n      </tr> \r\n    );\r\n  }\r\n  return table;\r\n  }\r\n\r\n  //render--render the entire rounds table with header, displaying a \"No\r\n  //Rounds Logged\" message in case the table is empty.\r\n  render() {\r\n    return(\r\n    <div className=\"padded-page\">\r\n      <h1></h1>\r\n      <table className=\"table table-hover\">\r\n        <thead className=\"thead-light\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Course</th>\r\n          <th>Score</th>\r\n          <th>View/Edit...</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(this.props.rounds).length === 0 ? \r\n          <tr>\r\n          <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\r\n          </tr> : this.renderTable()\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoundsTable;\r\n","import React from 'react';\r\nimport AppMode from './../AppMode.js';\r\n\r\nclass RoundForm extends React.Component {\r\n  constructor(props) {\r\n  super(props);\r\n  //Create date object for today, taking time zone into consideration\r\n  let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\r\n  //store date as ISO string\r\n  if (this.props.mode === AppMode.ROUNDS_LOGROUND) {\r\n    //If logging a new round, the starting state is a default round with\r\n    //today's date.\r\n    this.state = {date:  today.toISOString().substr(0,10), \r\n                  course: \"\",\r\n                  type: \"practice\",\r\n                  holes: \"18\",\r\n                  strokes: 80,\r\n                  minutes: 50,\r\n                  seconds: \"00\",\r\n                  notes: \"\",\r\n                  faIcon: \"fa fa-save\",\r\n                  btnLabel: \"Save Round Data\"}\r\n  } else {\r\n    //if editing an existing round, the starting state is the round's\r\n    //current data\r\n    let thisRound = {...this.props.startData};\r\n    delete thisRound.id;\r\n    thisRound.faIcon = \"fa fa-edit\";\r\n    thisRound.btnLabel = \"Update Round Data\";\r\n    this.state = thisRound;\r\n  }\r\n}\r\n  \r\n  \r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        if (name === \"seconds\") {\r\n          let newSec = (event.target.value.length < 2 ? \"0\" + \r\n            event.target.value : event.target.value);\r\n          let newSGS = this.computeSGS(this.state.strokes, this.state.minutes, \r\n                                       newSec);\r\n          this.setState({seconds: newSec, SGS: newSGS});\r\n        } else if (name === \"strokes\") {\r\n          let newStrokes = event.target.value;\r\n          let newSGS = this.computeSGS(newStrokes, this.state.minutes, \r\n            this.state.seconds);\r\n          this.setState({strokes: newStrokes, SGS: newSGS});\r\n        } else if (name === \"minutes\") {\r\n            let newMin = event.target.value;\r\n            let newSGS = this.computeSGS(this.state.strokes, newMin, \r\n              this.state.seconds);\r\n            this.setState({minutes: newMin, SGS: newSGS});\r\n        } else {\r\n          this.setState({[name]: event.target.value});\r\n        }\r\n    }\r\n  \r\n  \r\n    //handleSubmit -- When the user clicks on the button to save/update the\r\n    //round, start the spinner and invoke the parent component's saveRound\r\n    //method to do the actual work. Note that saveRound is set to the correct\r\n    //parent method based on whether the user is logging a new round or editing\r\n    //an existing round.\r\n    handleSubmit = (event) => {\r\n        //start spinner\r\n        this.setState({faIcon: \"fa fa-spin fa-spinner\",\r\n                        btnLabel: (this.props.mode === AppMode.ROUNDS_LOGROUND ? \r\n                                    \"Saving...\" : \"Updating...\")});\r\n        //Prepare current round data to be saved\r\n        let roundData = this.state;\r\n        delete roundData.faIcon;\r\n        delete roundData.btnLabel;\r\n        //call saveRound on 1 second delay to show spinning icon\r\n        setTimeout(this.props.saveRound,1000,roundData); \r\n        event.preventDefault(); \r\n        }\r\n  \r\n\r\n    computeSGS = (strokes, min, sec) => {\r\n      return (Number(strokes) + Number(min)) \r\n                  + \":\" + sec;\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form className=\"padded-page\" onSubmit={this.handleSubmit}>\r\n          <center>\r\n            <label>\r\n              Date:\r\n              <input name=\"date\" className=\"form-control form-center\" \r\n                type=\"date\" value={this.state.date} onChange={this.handleChange} />\r\n            </label>\r\n            <p></p>\r\n            <label>\r\n              Course:\r\n              <input name=\"course\" className=\"form-control form-center\" type=\"text\"\r\n                value={this.state.course} onChange={this.handleChange}\r\n                placeholder=\"Course played\" size=\"50\" maxLength=\"50\" />\r\n            </label>\r\n          <p></p>\r\n          <label>Type:\r\n          <select name=\"type\" value={this.state.type} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"practice\">Practice</option>\r\n            <option value=\"tournament\">Tournament</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label># Holes:\r\n          <select name=\"holes\" value={this.state.holes} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"9\">9</option>\r\n            <option value=\"18\">18</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label># Strokes:\r\n          <input name=\"strokes\" className=\"form-control form-center\" type=\"number\" \r\n            min=\"9\" max=\"200\" value={this.state.strokes} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Time: <br></br>\r\n          <input name=\"minutes\" type=\"number\" size=\"3\"\r\n            min=\"10\" max=\"400\" value={this.state.minutes}\r\n            onChange={this.handleChange} />:  \r\n          <input name=\"seconds\" type=\"number\" size=\"2\"\r\n            min=\"0\" max=\"60\" value={this.state.seconds} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Speedgolf Score: <br></br>\r\n              <input name=\"SGS\" className=\"form-center\" type=\"text\" size=\"6\" \r\n                disabled={true} value={this.computeSGS(this.state.strokes,this.state.minutes,this.state.seconds)} />\r\n          </label>\r\n          <p></p>\r\n          <label>Notes:\r\n              <textarea name=\"notes\" className=\"form-control\" rows=\"6\" cols=\"75\" \r\n                placeholder=\"Enter round notes\" value={this.state.notes} \r\n                onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <p></p>\r\n          <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \r\n            className=\"btn btn-primary btn-color-theme\">\r\n              <span className={this.state.faIcon}/>&nbsp;{this.state.btnLabel}\r\n          </button>\r\n          </center>\r\n        </form>\r\n      );\r\n    }\r\n}\r\n\r\nexport default RoundForm;","//Rounds -- A parent component for the app's \"rounds\" mode.\r\n//Manages the rounds data for the current user and conditionally renders the\r\n//appropriate rounds mode page based on App's mode, which is passed in as a prop.\r\n\r\nimport React from 'react';\r\nimport AppMode from './../AppMode.js';\r\nimport RoundsTable from './RoundsTable.js';\r\nimport RoundForm from './RoundForm.js';\r\nimport FloatingButton from './FloatingButton.js';\r\n\r\nclass Rounds extends React.Component {\r\n\r\n    //Initialize a Rounds object based on local storage\r\n    constructor() {\r\n        super();\r\n        this.state = {deleteId: \"\",\r\n                      editId: \"\"};           \r\n    }\r\n\r\n    //componentDidMount -- After the component moutns, obtain current user's \r\n    //rounds from the server and push them into component state\r\n    // componentDidMount = async () => {\r\n    //     let url = \"/rounds/\" + this.props.userObj.id;\r\n    //     let res = await fetch(url, {method: 'GET'});\r\n    //     if (res.status != 200) {\r\n    //         let msg = await res.text();\r\n    //         alert(\"There was an error obtaining rounds data for this user: \" \r\n    //         + msg);\r\n    //         return;\r\n    //     } \r\n    //     let body = await res.json();\r\n    //     body = JSON.parse(body);\r\n    //     alert(\"in componentDidMount with GET results: \" + body);\r\n    //     this.setState({rounds: body}, this.props.changeMode(AppMode.ROUNDS));\r\n    // }\r\n\r\n    //addRound -- Given an object newData containing a new round, use the \r\n    //server POST route to add the new round to the database. If the add is\r\n    //successful, call on the refreshOnUpdate() method to force the parent\r\n    //App component to refresh its state from the database and re-render itself,\r\n    //allowing the change to be propagated to the Rounds table. Then switch\r\n    //the mode back to AppMode.ROUNDS since the user is done adding a round.\r\n    addRound = async (newData) => {\r\n        const url = '/rounds/' + this.props.userObj.id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'POST',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            alert(\"An error occurred when attempting to add new round to database: \"    \r\n            + msg);\r\n            this.props.changeMode(AppMode.ROUNDS);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }\r\n    }\r\n\r\n    //editRound -- Given an object newData containing updated data on an\r\n    //existing round, update the current user's round in the database. \r\n    //toggle the mode back to AppMode.ROUNDS since the user is done editing the\r\n    //round. \r\n    editRound = async (newData) => {\r\n        const url = '/rounds/' + this.props.userObj.id + '/' + \r\n            this.props.userObj.rounds[this.state.editId]._id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'PUT',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            alert(\"An error occurred when attempting to add new round to database: \" \r\n            + msg);\r\n            this.props.changeMode(AppMode.ROUNDS);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }\r\n    }\r\n\r\n\r\n    //deleteRound -- Delete the current user's round uniquely identified by\r\n    //this.state.deleteId, delete from the database, and reset deleteId to empty.\r\n    deleteRound = async () => {\r\n        // TO DO: Fill this in\r\n        const url = '/rounds/' + this.props.userObj.id + '/' + \r\n        this.props.userObj.rounds[this.state.deleteId]._id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            alert(\"An error occurred when attempting to delete a round from database: \" \r\n            + msg);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }\r\n    }\r\n \r\n    //setDeleteId -- Capture in this.state.deleteId the unique id of the item\r\n    //the user is considering deleting.\r\n    setDeleteId = (val) => {\r\n        this.setState({deleteId: val});\r\n        this.state.deleteId = val;\r\n    }\r\n\r\n    //setEditId -- Capture in this.state.editId the unique id of the item\r\n    //the user is considering editing.\r\n    setEditId = (val) => {\r\n        this.setState({editId: val});\r\n    }\r\n    \r\n    //render -- Conditionally render the Rounds mode page as either the rounds\r\n    //table, the rounds form set to obtain a new round, or the rounds form set\r\n    //to edit an existing round.\r\n    render() {\r\n        switch(this.props.mode) {\r\n            case AppMode.ROUNDS:\r\n                return (\r\n                    <>\r\n                    <RoundsTable \r\n                        rounds={this.props.userObj.rounds}\r\n                        setEditId={this.setEditId}\r\n                        setDeleteId={this.setDeleteId}\r\n                        deleteRound={this.deleteRound}\r\n                        changeMode={this.props.changeMode}\r\n                        menuOpen={this.props.menuOpen} /> \r\n                    <FloatingButton\r\n                        handleClick={() => \r\n                        this.props.changeMode(AppMode.ROUNDS_LOGROUND)}\r\n                        menuOpen={this.props.menuOpen}\r\n                        icon={\"fa fa-plus\"} />\r\n                    </>\r\n                );\r\n            case AppMode.ROUNDS_LOGROUND:\r\n                return (\r\n                    <RoundForm\r\n                        mode={this.props.mode}\r\n                        startData={\"\"} \r\n                        saveRound={this.addRound} />\r\n                );\r\n            case AppMode.ROUNDS_EDITROUND:\r\n                let thisRound = {...this.props.userObj.rounds[this.state.editId]};\r\n                thisRound.date = thisRound.date.substr(0,10);\r\n                if (thisRound.seconds < 10) {\r\n                    thisRound.seconds = \"0\" + thisRound.seconds;\r\n                } \r\n                delete thisRound.SGS;\r\n                return (\r\n                    <RoundForm\r\n                        mode={this.props.mode}\r\n                        startData={thisRound} \r\n                        saveRound={this.editRound} />\r\n                );\r\n        }\r\n    }\r\n\r\n}   \r\n\r\nexport default Rounds;\r\n","import React from 'react';\r\nimport AppMode from \"./../AppMode.js\"\r\n\r\nclass DirectorMainPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\" id=\"directorMainPage\" name=\"directorMainPage\">\r\n            <center>\r\n            <h1 >Director Main Page</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <p>\r\n                <button id=\"tournamentConfigBtn\" onClick={()=>this.props.changeMode(AppMode.FEED)} style={{width: \"10%\", \"background-color\" :\"#2E8B57\", color: \"white\"}}>\r\n                <span>Tournament Configuration</span>\r\n                </button>\r\n                <br></br>\r\n                <button onClick={()=>this.props.changeMode(AppMode.LEADERBOARD)} style={{width: \"10%\", \"background-color\" :\"#2E8B57\", color: \"white\"}}>\r\n                    <span >Leaderboard</span>\r\n                </button> \r\n            </p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default DirectorMainPage;","import React from 'react';\r\n\r\nclass Config_Divions extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >Leaderboard</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default Config_Divions;","import React from 'react';\r\nimport NavBar from './NavBar.js';\r\nimport SideMenu from './SideMenu.js';\r\nimport ModeBar from './ModeBar.js';\r\nimport FloatingButton from './FloatingButton.js';\r\nimport LoginPage from './LoginPage.js';\r\nimport AppMode from \"./../AppMode.js\"\r\nimport CoursesAppMode from './../CoursesAppMode'\r\nimport FeedPage from './FeedPage.js';\r\nimport Rounds from './Rounds.js';\r\nimport DirectorMainPage from './DirectorMainPage.js';\r\nimport LeaderBoard from './Leaderboard.js'\r\n\r\nconst modeTitle = {};\r\nmodeTitle[AppMode.LOGIN] = \"Welcome to SpeedScore\";\r\nmodeTitle[AppMode.FEED] = \"\";\r\nmodeTitle[AppMode.ROUNDS] = \"My Rounds\";\r\nmodeTitle[AppMode.ROUNDS_LOGROUND] = \"Log New Round\";\r\nmodeTitle[AppMode.ROUNDS_EDITROUND] = \"Edit Round\";\r\nmodeTitle[AppMode.MAIN] = \"Director Main Page\"\r\n\r\nconst modeToPage = {};\r\nmodeToPage[AppMode.LOGIN] = LoginPage;\r\nmodeToPage[AppMode.FEED] = FeedPage;\r\nmodeToPage[AppMode.ROUNDS] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_LOGROUND] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_EDITROUND] = Rounds;\r\nmodeToPage[AppMode.MAIN] = DirectorMainPage;\r\nmodeToPage[AppMode.LEADERBOARD] = LeaderBoard;\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {mode: AppMode.LOGIN,\r\n                  menuOpen: false,\r\n                  authenticated: false,\r\n                  userObj: {displayName: \"\", profilePicURL: \"\"},\r\n                  coursesMode: CoursesAppMode.COURSELIST\r\n                 };\r\n  }\r\n\r\n  //componentDidMount\r\n  componentDidMount() {\r\n    if (!this.state.authenticated) { \r\n      //Use /auth/test route to (re)-test authentication and obtain user data\r\n      fetch(\"/auth/test\")\r\n        .then((response) => response.json())\r\n        .then((obj) => {\r\n          if (obj.isAuthenticated) {\r\n            this.setState({\r\n              userObj: obj.user,\r\n              authenticated: true,\r\n              mode: AppMode.MAIN //We're authenticated so can get into the app.\r\n            });\r\n          }\r\n        }\r\n      )\r\n    } \r\n  }\r\n  handleNewTournament = () => {\r\n    let obj = {\r\n      id: \"director@email.com\",\r\n      password: \"Password1!\",\r\n      displayName: \"Director\",\r\n      authStrategy : \"local\",\r\n      profile : \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\r\n      securityQuestion : \"Director?\",\r\n      securityAnswer : \"Yes\",\r\n      courses : []\r\n    }\r\n    this.setState({\r\n      authenticated: true,\r\n      mode: AppMode.MAIN\r\n    });\r\n  }\r\n\r\n  //refreshOnUpdate(newMode) -- Called by child components when user data changes in \r\n  //the database. The function calls the users/:userid (GET) route to update \r\n  //the userObj state var based on the latest database changes, and sets the \r\n  //mode state var is set to newMode. After this method is called, the\r\n  //App will re-render itself, forcing the new data to \r\n  //propagate to the child components when they are re-rendered.\r\n  refreshOnUpdate = async(newMode) => {\r\n    let response = await fetch(\"/users/\" + this.state.userObj.id);\r\n    response = await response.json();\r\n    const obj = JSON.parse(response);\r\n    this.setState({\r\n      userObj: obj,\r\n      mode: newMode\r\n    });\r\n  }\r\n\r\n  setCoursesMode = (newMode) => {\r\n    this.setState({coursesMode: newMode});\r\n  }\r\n\r\n\r\n  handleChangeMode = (newMode) => {\r\n    if (newMode == \"LOGIN\") {\r\n      window.open(`/auth/logout`,\"_self\");\r\n    }\r\n    this.setState({mode: newMode});\r\n  }\r\n\r\n  openMenu = () => {\r\n    this.setState({menuOpen : true});\r\n  }\r\n  \r\n  closeMenu = () => {\r\n    this.setState({menuOpen : false});\r\n  }\r\n\r\n  toggleMenuOpen = () => {\r\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\r\n  }\r\n\r\n  setUserId = (Id) => {\r\n    this.setState({userId: Id,\r\n                   authenticated: true});\r\n  }\r\n\r\n\r\n  render() {\r\n    const ModePage = modeToPage[this.state.mode];\r\n    return (\r\n      <div className=\"layout\">\r\n        <NavBar \r\n          title={modeTitle[this.state.mode]} \r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          menuOpen={this.state.menuOpen}\r\n          toggleMenuOpen={this.toggleMenuOpen}/>\r\n          <SideMenu \r\n            menuOpen = {this.state.menuOpen}\r\n            mode={this.state.mode}\r\n            toggleMenuOpen={this.toggleMenuOpen}\r\n            displayName={this.state.userObj.displayName}\r\n            profilePicURL={this.state.userObj.profilePicURL}\r\n            logOut={() => this.handleChangeMode(AppMode.LOGIN)}/>\r\n          <ModePage \r\n            newTournament={this.handleNewTournament}\r\n            menuOpen={this.state.menuOpen}\r\n            mode={this.state.mode}\r\n            changeMode={this.handleChangeMode}\r\n            userObj={this.state.userObj}\r\n            refreshOnUpdate={this.refreshOnUpdate}\r\n            coursesMode={this.state.coursesMode}\r\n            setCoursesMode={this.setCoursesMode}\r\n            />\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './styles/index.css';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}