{"version":3,"sources":["AppMode.js","components/NavBar.js","components/SideMenu.js","components/FloatingButton.js","components/ModeBar.js","components/LoginPage.js","ConfigTab.js","components/TabBar.js","components/Config_Basic.js","components/Config_Logo.js","components/Config_Courses.js","components/Config_Rounds.js","components/Config_Divisions.js","components/Config_Players.js","components/Config_Scorers.js","components/Config_Publish.js","components/FeedPage.js","components/RoundsTable.js","components/RoundForm.js","components/Rounds.js","components/DirectorMainPage.js","components/Leaderboard.js","components/App.js","serviceWorker.js","index.js"],"names":["AppMode","LOGIN","FEED","ROUNDS","ROUNDS_LOGROUND","ROUNDS_EDITROUND","COURSES","MAIN","LEADERBOARD","Object","freeze","NavBar","getMenuBtnIcon","props","mode","menuOpen","handleMenuBtnClick","changeMode","toggleMenuOpen","className","onClick","this","id","src","alt","height","width","title","React","Component","SideMenu","renderModeMenuItems","profilePicURL","displayName","logOut","FloatingButton","handleClick","LoginPage","handleLoginSubmit","event","a","preventDefault","setState","loginBtnIcon","loginBtnLabel","url","emailInputRef","current","value","fetch","method","res","status","window","open","text","resText","loginMsg","accountCreateStatus","msg","accountCreateMsg","showCreateAccountDialog","cancelCreateAccount","handleOAuthLogin","provider","handleOAuthLoginClick","setTimeout","createRef","state","showResetPasswordDialog","githubIcon","githubLabel","focus","onSubmit","htmlFor","style","padding","fontSize","ref","placeholder","pattern","required","type","ConfigTab","BASIC","LOGO","DIVISIONS","PLAYERS","SCORERS","PUBLISH","TabBar","Config_Basic","fontStyle","Config_Logo","Config_Courses","Config_Rounds","name","size","min","max","Config_Divions","renderTable","Config_Players","Config_Scorers","Config_Publish","modeToPage","FeedPage","handleChangeMode","newMode","ModePage","RoundsTable","editRound","setEditId","confirmDelete","setDeleteId","confirm","deleteRound","table","r","push","key","rounds","date","substring","course","Number","strokes","minutes","seconds","length","keys","colSpan","RoundForm","handleChange","target","newSec","newSGS","computeSGS","SGS","newStrokes","newMin","handleSubmit","faIcon","btnLabel","roundData","saveRound","sec","today","Date","now","getTimezoneOffset","toISOString","substr","holes","notes","thisRound","startData","onChange","maxLength","disabled","rows","cols","Rounds","addRound","newData","userObj","headers","body","JSON","stringify","alert","refreshOnUpdate","editId","_id","deleteId","val","icon","DirectorMainPage","class","modeTitle","LeaderBoard","App","response","json","obj","parse","openMenu","closeMenu","prevState","setUserId","Id","userId","authenticated","then","isAuthenticated","user","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.546fd79b.chunk.js","sourcesContent":["/* AppMode: The enumerated type for AppMode. */\n\nconst AppMode = {\n    LOGIN: \"LoginMode\",\n    FEED: \"FeedMode\",\n    ROUNDS: \"RoundsMode\",\n    ROUNDS_LOGROUND: \"RoundsMode-LogRound\",\n    ROUNDS_EDITROUND: \"RoundsMode-EditRound\",\n    COURSES: \"CoursesMode\",\n    MAIN: \"DirectorMode\",\n    LEADERBOARD: \"LeaderboardMode\"\n};\n\nObject.freeze(AppMode); //This ensures that the object is immutable.\n\nexport default AppMode;","import React from 'react';\nimport AppMode from '../AppMode';\n\nclass NavBar extends React.Component {\n\n  getMenuBtnIcon = () => {\n      if (this.props.mode === AppMode.ROUNDS_LOGROUND || \n          this.props.mode === AppMode.ROUNDS_EDITROUND)\n          return \"fa fa-arrow-left\";\n      if (this.props.menuOpen)\n        return \"fa fa-times\";\n      return \"fa fa-bars\";\n  }\n\n  handleMenuBtnClick = () => {\n    if (this.props.mode === AppMode.ROUNDS_LOGROUND ||\n        this.props.mode === AppMode.ROUNDS_EDITROUND) {\n      this.props.changeMode(AppMode.ROUNDS);\n    } else if (this.props.mode != AppMode.LOGIN) {\n      this.props.toggleMenuOpen();\n    }\n  }\n\n    \n  render() {\n    return (\n    <div className=\"navbar\">  \n    <span className=\"navbar-items\">\n      <button className=\"sidemenu-btn\" onClick={this.handleMenuBtnClick}>\n        <span id=\"menuBtnIcon\" className={\"sidemenu-btn-icon \" + this.getMenuBtnIcon()}>\n        </span>\n      </button>\n      <img src=\"http://tiny.cc/sslogo\" alt=\"Speed Score Logo\" height=\"38px\"\n      width=\"38px\" />\n      <span className=\"navbar-title\">\n        &nbsp;{this.props.title}\n      </span>\n    </span>\n  </div>\n); \n}\n}\n\nexport default NavBar;\n","import React from 'react';\nimport AppMode from './../AppMode.js'\n\nclass SideMenu extends React.Component {\n\n//renderModeItems -- Renders correct subset of mode menu items based on\n//current mode, which is stored in this.prop.mode. Uses switch statement to\n//determine mode.\nrenderModeMenuItems = () => {\n  switch (this.props.mode) {\n    case AppMode.FEED:\n      return(\n        <div>\n        <a className=\"sidemenu-item\">\n            <span className=\"fa fa-users\"></span>&nbsp;Main Page</a>\n        <a className=\"sidemenu-item \">\n            <span className=\"fa fa-search\"></span>&nbsp;LeaderBoard</a>\n        </div>\n      );\n    break;\n    case AppMode.ROUNDS:\n      return(\n        <div>\n          <a className=\"sidemenu-item\">\n            <span className=\"fa fa-plus\"></span>&nbsp;Log New Round</a>\n          <a className=\"sidemenu-item\">\n            <span className=\"fa fa-search\"></span>&nbsp;Search Rounds</a>\n        </div>\n      );\n    break;\n    case AppMode.COURSES:\n      return(\n        <div>\n        <a className=\"sidemenu-item\">\n            <span className=\"fa fa-plus\"></span>&nbsp;Add a Course</a>\n        <a className=\"sidemenu-item\">\n            <span className=\"fa fa-search\"></span>&nbsp;Search Courses</a>\n        </div>\n      );\n    default:\n        return null;\n    }\n}\n\n    render() {\n       return (\n        <div className={\"sidemenu \" + (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")}\n             onClick={this.props.toggleMenuOpen}>\n          {/* SIDE MENU TITLE */}\n          <div className=\"sidemenu-title\">\n            <img src={this.props.profilePicURL} height='60' width='60' />\n            <span id=\"userID\" className=\"sidemenu-userID\">&nbsp;{this.props.displayName}</span>\n        </div>\n          {/* MENU CONTENT */}\n          {this.renderModeMenuItems()}\n          {/* The following menu items are present regardless of mode */}\n          <a id=\"aboutBtn\" className=\"sidemenu-item\">\n            <span className=\"fa fa-info-circle\"></span>&nbsp;About</a>\n          <a id=\"logOutBtn\" className=\"sidemenu-item\" onClick={this.props.logOut}>\n            <span className=\"fa fa-sign-out-alt\"></span>&nbsp;Log Out</a>\n        </div>\n       );\n    }\n}\n\nexport default SideMenu;\n","import React from 'react';\n\nclass FloatingButton extends React.Component {\n    render() {\n      return(\n        <div className=\"floatbtn\" onClick={this.props.handleClick}>\n          <span className=\"floatbtn-icon fa fa-plus\"></span>\n        </div>  \n      );\n    }\n}\n\nexport default FloatingButton;\n","import React from 'react';\nimport AppMode from '../AppMode.js';\n\n\nclass ModeBar extends React.Component {\n    render() {\n      return(\n        <div className={\"modebar\" + (this.props.mode === AppMode.LOGIN ? \n          \" invisible\" : (this.props.menuOpen ? \" ignore-click visible\" : \" visible\"))}>\n        <a className={(this.props.mode === AppMode.FEED ? \" item-selected\" : null)}\n            onClick={()=>this.props.changeMode(AppMode.FEED)}>\n          <span className=\"modebaricon fa fa-th-list\"></span>\n          <span className=\"modebar-text\">Feed</span>\n        </a>\n        <a className={(this.props.mode === AppMode.ROUNDS || \n               this.props.mode === AppMode.ROUNDS_EDITROUND || \n               this.props.mode === AppMode.ROUNDS_LOGROUND ? \n                  \" item-selected\" : null)}\n           onClick={()=>this.props.changeMode(AppMode.ROUNDS)}>\n          <span className=\"modebar-icon  fa fa-history\"></span>\n          <span className=\"modebar-text\">Rounds</span>\n        </a>\n        <a className={(this.props.mode === AppMode.COURSES ? \" item-selected\" : null)}\n          onClick={()=>this.props.changeMode(AppMode.COURSES)}>\n          <span className=\"modebar-icon  fa fa-flag\"></span>\n          <span className=\"modebar-text\">Courses</span>\n        </a> \n        </div>\n      );\n    }\n}\n\nexport default ModeBar;\n","import React from 'react';\nimport AppMode from \"./../AppMode.js\";\n\nclass LoginPage extends React.Component {\n\nconstructor() {\n    super();\n    //Create a ref for the email input DOM element\n    this.emailInputRef = React.createRef();\n    this.state = {accountCreateMsg: \"\",\n                  loginBtnIcon: \"fa fa-sign-in\",\n                  loginBtnLabel: \"Director Login\",\n                  showCreateAccountDialog: false,\n                  showResetPasswordDialog: false,\n                  githubIcon: \"fa fa-github\",\n                  githubLabel: \"Sign in with GitHub\",\n                  loginMsg: \"\"\n                  };\n} \n    \n//Focus cursor in email input field when mounted\ncomponentDidMount() {\n    this.emailInputRef.current.focus();\n}  \n\n//handleLogin -- Callback function that sets up initial app state upon login.\n//handleLogin = () => {\n    //Stop spinner\n//    this.setState({loginBtnIcon: \"fa fa-sign-in\",\n //                  loginBtnLabel: \"Log In\"});\n    //Set current user\n    //this.props.setUserId(this.emailInputRef.current.value);\n    //Trigger switch to FEED mode (default app landing page)\n    //this.props.changeMode(AppMode.FEED);\n//}\n\n\n//handleLoginSubmit -- Called when user clicks on login button.\nhandleLoginSubmit = async (event) => {\n    event.preventDefault();\n    this.setState({loginBtnIcon: \"fa fa-spin fa-spinner\",\n                   loginBtnLabel: \"Logging In...\"});\n    const url = \"auth/login?username=\" + this.emailInputRef.current.value + \"@email.com\" +\n                \"&password=\" + \"Password1!\"; // always sets password\n    const res = await fetch(url, {method: 'POST'}); \n    if (res.status == 200) { //successful login!\n        window.open(\"/\",\"_self\");\n    } else { //Unsuccessful login\n      const resText = await res.text();\n      this.setState({loginBtnIcon: \"fa fa-sign-in\",\n                     loginBtnLabel: \"Log In\",\n                     loginMsg: resText});\n    }\n}\n\n  //accountCreateStatus -- Called by child CreateAccountDialog component when \n  //user attempted to create new account. Hide the dialog and display \n  //a message indicating result of the attempt.\n  accountCreateStatus = (msg) => {\n      this.setState({accountCreateMsg: msg,\n                     showCreateAccountDialog: false});\n  }\n\n  //cancelCreateAccount -- Called by child CreateAccountDialog componenet when user decides\n  //to cancel creation of new account by clicking the \"X\" in top-right of dialog.\n  cancelCreateAccount = () => {\n      this.setState({showCreateAccountDialog: false});\n  }\n\n//handleOAuthLogin -- Callback function that initiates contact with OAuth\n//provider\nhandleOAuthLogin = (provider) => {\n    window.open(`/auth/${provider}`,\"_self\");\n}\n\n//handleOAuthLoginClick -- Called whent the user clicks on button to\n//authenticate via a third-party OAuth service. The name of the provider is\n//passed in as a parameter.\nhandleOAuthLoginClick = (provider) => {\n   this.setState({[provider + \"Icon\"] : \"fa fa-spin fa-spinner\",\n                  [provider + \"Label\"] : \"Connecting...\"});\n   setTimeout(() => this.handleOAuthLogin(provider),1000);\n}\n\n\n  render() {\n    return(\n        <div id=\"login-mode-div\" className=\"padded-page\">\n        <center>\n            <h1 />\n            {this.state.accountCreateMsg != \"\" ? <p className=\"emphasis\">{this.state.accountCreateMsg}</p> : null}\n            {this.state.loginMsg != \"\" ? <p className=\"emphasis\">{this.state.loginMsg}</p> : null}\n            <form id=\"loginInterface\" onSubmit={this.handleLoginSubmit}>\n            <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24 }}>\n                Name:\n                <input\n                ref={this.emailInputRef}\n                className=\"form-control login-text\"\n                placeholder=\"Enter Director Name\"\n                id=\"emailInput\"\n                pattern=\"[A-Za-z0-9._%+-]{2,}\"\n                required={true}\n                />\n            </label>\n            <p />\n            <p className=\"bg-danger\" id=\"feedback\" style={{ fontSize: 16 }} />\n            <button\n                type=\"submit\"\n                className=\"btn-color-theme btn btn-primary btn-block login-btn\">\n                <span id=\"login-btn-icon\" className={this.state.loginBtnIcon}/>\n                &nbsp;{this.state.loginBtnLabel}\n            </button>\n            <p>\n            </p>  \n            <p>\n                <i>Version CptS 489</i>\n            </p>\n            </form>\n        </center>\n        </div>\n        )\n    }\n} \n\nexport default LoginPage;\n","/* ConfigTab: The enumerated type for  ConfigTab. */\n\nconst  ConfigTab = {\n    BASIC: \"BasicInfoMode\",\n    LOGO: \"LogoMode\",\n    COURSES: \"CoursesMode\",\n    ROUNDS: \"RoundsMode\",\n    DIVISIONS: \"DivionsMode\",\n    PLAYERS: \"PlayersMode\",\n    SCORERS: \"ScorersMode\",\n    PUBLISH: \"PublishMode\"\n};\n\nObject.freeze(ConfigTab); //This ensures that the object is immutable.\n\nexport default  ConfigTab;","import React from 'react';\nimport ConfigTab from '../ConfigTab.js';\n\nclass TabBar extends React.Component {\n    render() {\n      return(\n        <div className=\"tabbar\">\n        <a className={(this.props.mode === ConfigTab.BASIC ? \" item-selected\" : null)}\n            onClick={()=>this.props.changeMode(ConfigTab.BASIC)}>\n          <span className=\"tabbar-text\">Basic Info</span>\n        </a>\n        <a className={(this.props.mode === ConfigTab.LOGO ? \" item-selected\" : null)}\n           onClick={()=>this.props.changeMode(ConfigTab.LOGO)}>\n          <span className=\"tabbar-text\">Logo + Colors</span>\n        </a>\n        <a className={(this.props.mode === ConfigTab.COURSES ? \" item-selected\" : null)}\n          onClick={()=>this.props.changeMode(ConfigTab.COURSES)}>\n          <span className=\"tabbar-text\">Courses</span>\n        </a> \n        <a className={(this.props.mode === ConfigTab.ROUNDS ? \" item-selected\" : null)}\n          onClick={()=>this.props.changeMode(ConfigTab.ROUNDS)}>\n          <span className=\"tabbar-text\">Rounds</span>\n        </a> \n        <a className={(this.props.mode === ConfigTab.DIVISIONS ? \" item-selected\" : null)}\n          onClick={()=>this.props.changeMode(ConfigTab.DIVISIONS)}>\n          <span className=\"tabbar-text\">Divisions</span>\n        </a> \n        <a className={(this.props.mode === ConfigTab.PLAYERS ? \" item-selected\" : null)}\n          onClick={()=>this.props.changeMode(ConfigTab.PLAYERS)}>\n          <span className=\"tabbar-text\">Players</span>\n        </a> \n        <a className={(this.props.mode === ConfigTab.SCORERS ? \" item-selected\" : null)}\n          onClick={()=>this.props.changeMode(ConfigTab.SCORERS)}>\n          <span className=\"tabbar-text\">Scorers</span>\n        </a> \n        <a className={(this.props.mode === ConfigTab.PUBLISH ? \" item-selected\" : null)}\n          onClick={()=>this.props.changeMode(ConfigTab.PUBLISH)}>\n          <span className=\"tabbar-text\">Publish</span>\n        </a> \n        </div>\n      );\n    }\n}\n\nexport default TabBar;","import React from 'react';\n\nclass Config_Basic extends React.Component {\n\n    render() {\n        return (\n        <div className=\"padded-page\">\n            <center>\n            <h1 >Basic Info</h1>\n            <h2>This page is under construction.</h2>\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \n             height=\"200\" width=\"200\"/>\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\n            </center>\n        </div>\n        );\n    }   \n}\n\nexport default Config_Basic;","import React from 'react';\n\nclass Config_Logo extends React.Component {\n\n    render() {\n        return (\n        <div className=\"padded-page\">\n            <center>\n            <h1 >Logo</h1>\n            <h2>This page is under construction.</h2>\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \n             height=\"200\" width=\"200\"/>\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\n            </center>\n        </div>\n        );\n    }   \n}\n\nexport default  Config_Logo;","import React from 'react';\n\nclass Config_Courses extends React.Component {\n\n    render() {\n        return (\n        <div className=\"padded-page\">\n            <center>\n            <h1 >Courses</h1>\n            <h2>This page is under construction.</h2>\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \n             height=\"200\" width=\"200\"/>\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\n            </center>\n        </div>\n        );\n    }   \n}\n\nexport default Config_Courses;","import React from 'react';\n\nclass Config_Rounds extends React.Component {\n\n    render() {\n        return (\n            <div className=\"padded-page\">\n            <div> \n               <h1>Number of Rounds in Tournamnet</h1>                \n         <select name=\"type\" \n           className=\"form-control form-center\" >\n           <option value=\"1\">1</option>\n           <option value=\"2\">2</option>\n         </select> \n           </div>\n\n           <center>\n           <label>\n             Date:\n             <input name=\"date\" className=\"form-control form-center\" \n               type=\"date\" />\n           </label>\n           <p></p>\n           <label>Time: <br></br>\n         <input name=\"minutes\" type=\"number\" size=\"3\"\n           min=\"10\" max=\"400\"  />:  \n         <input name=\"seconds\" type=\"number\" size=\"2\"\n           min=\"0\" max=\"60\" />\n         </label>\n         <p></p>\n         <label>Format:\n         <select name=\"type\"  \n           className=\"form-control form-center\" >\n           <option value=\"practice\">speedgolf</option>\n           <option value=\"tournament\">Tournament</option>\n         </select> \n         </label>\n         <p></p>\n         <label>Live Scoring method:\n         <select name=\"type\"  \n           className=\"form-control form-center\" >\n           <option value=\"practice\">player</option>\n           <option value=\"tournament\">Tournament</option>\n         </select> \n         </label>\n         <p></p>\n         <label>Scoring data:\n         <select name=\"type\"\n           className=\"form-control form-center\" >\n           <option value=\"practice\">strockes and time</option>\n           <option value=\"tournament\">Tournament</option>\n         </select> \n         </label>\n         <p></p>\n         <button type=\"submit\" style={{width: \"90%\",fontSize: \"36px\"}} \n           className=\"btn btn-primary btn-color-theme\">\n            Save And next\n         </button>\n           </center>\n       </div>\n        );\n    }   \n}\n\nexport default  Config_Rounds;","import React from 'react';\n\nclass Config_Divions extends React.Component {\n\n\n    renderTable = () => {\n        let table = [];\n        \n        return table;\n        }\n        \n    render() {\n        return (\n            <div className=\"padded-page\">\n            <button type=\"submit\" style={{width: \"90%\",fontSize: \"36px\"}} \n           className=\"btn btn-primary btn-color-theme\">\n            add division\n         </button>\n         <div> \n           <h1> Divisions</h1>\n           <table className=\"table table-hover\">\n       <thead className=\"thead-light\">\n       <tr>\n         <th>Name</th>\n         <th># Rounds</th>\n         <th>Hole in each round</th>\n         <th>Course in each round</th>\n         \n       </tr>\n       </thead>\n       <tbody>\n         \n       </tbody>\n     </table>\n\n\n         </div>\n         <div> \n         <button type=\"submit\" style={{width: \"90%\",fontSize: \"36px\"}} \n           className=\"btn btn-primary btn-color-theme\">\n            Save and Next\n         </button>\n         </div>\n       </div>\n        );\n    }   \n}\n\nexport default Config_Divions;","import React from 'react';\n\nclass Config_Players extends React.Component {\n\n    render() {\n        return (\n        <div className=\"padded-page\">\n            <center>\n            <h1 >Player</h1>\n            <h2>This page is under construction.</h2>\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \n             height=\"200\" width=\"200\"/>\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\n            </center>\n        </div>\n        );\n    }   \n}\n\nexport default  Config_Players;","import React from 'react';\n\nclass Config_Scorers extends React.Component {\n\n    render() {\n        return (\n        <div className=\"padded-page\">\n            <center>\n            <h1 > Scorers</h1>\n            <h2>This page is under construction.</h2>\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \n             height=\"200\" width=\"200\"/>\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\n            </center>\n        </div>\n        );\n    }   \n}\n\nexport default  Config_Scorers;","import React from 'react';\n\nclass Config_Publish extends React.Component {\n\n    render() {\n        return (\n        <div className=\"padded-page\">\n            <center>\n            <h1 > Publish</h1>\n            <h2>This page is under construction.</h2>\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \n             height=\"200\" width=\"200\"/>\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\n            </center>\n        </div>\n        );\n    }   \n}\n\nexport default   Config_Publish;","import React from 'react';\nimport ConfigTab from '../ConfigTab.js';\nimport TabBar from './TabBar.js';\nimport Config_Basic from './Config_Basic.js';\nimport Config_Logo from './Config_Logo.js';\nimport Config_Courses from './Config_Courses.js';\nimport Config_Rounds from './Config_Rounds.js';\nimport Config_Divions from './Config_Divisions.js';\nimport Config_Players from './Config_Players.js';\nimport Config_Scorers from './Config_Scorers.js';\nimport Config_Publish from './Config_Publish.js';\n\nconst modeToPage = {};\nmodeToPage[ConfigTab.BASIC] = Config_Basic;\nmodeToPage[ConfigTab.LOGO] = Config_Logo;\nmodeToPage[ConfigTab.COURSES] = Config_Courses;\nmodeToPage[ConfigTab.ROUNDS] = Config_Rounds;\nmodeToPage[ConfigTab.DIVISIONS] = Config_Divions;\nmodeToPage[ConfigTab.PLAYERS] = Config_Players;\nmodeToPage[ConfigTab.SCORERS] = Config_Scorers;\nmodeToPage[ConfigTab.PUBLISH] = Config_Publish;\n\nclass FeedPage extends React.Component {\n    constructor() {\n        super();\n        this.state = {mode: ConfigTab.BASIC,\n                      menuOpen: false,\n                     };\n      }\n\n    handleChangeMode = (newMode) => {\n        if (newMode == \"LOGIN\") {\n          window.open(`/auth/logout`,\"_self\");\n        }\n        this.setState({mode: newMode});\n      }\n\n    render() {\n        const ModePage = modeToPage[this.state.mode];\n        return (\n        <div className=\"padded-page\">\n            <center>\n            <h1 >Tournament Settings</h1>\n            <TabBar \n                 mode={this.state.mode} \n                 changeMode={this.handleChangeMode}\n                 menuOpen={this.state.menuOpen}/>\n            <ModePage \n                menuOpen={this.state.menuOpen}\n                mode={this.state.mode}\n                changeMode={this.handleChangeMode}/>\n            </center>\n        </div>\n        );\n    }   \n}\n\nexport default FeedPage;","import React from 'react';\nimport AppMode from './../AppMode.js';\n\nclass RoundsTable extends React.Component {\n\n  //editRound -- Triggered when the user clicks the edit button for a given\n  //round. The id param is the unique property that identifies the round.\n  //Set the state variable representing the id of the round to be edited and\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\n  //chosen round.\n  editRound = (id) => {\n    this.props.setEditId(id);\n    this.props.changeMode(AppMode.ROUNDS_EDITROUND);\n  }\n\n  //confirmDelete -- Triggered when the user clicks the delete button\n  //for a given round. The id paam is the unique property that \n  //identifies the round. Set the state variable representing the id\n  //of the round to be deleted and then present a dialog box asking\n  //the user to confirm the deletion.\n  //TO DO: Implement the confirmation dialog box. For now, we\n  //present alert box placeholder\n  confirmDelete = (id) => {\n    this.props.setDeleteId(id);\n    var result = window.confirm(\"Are you sure you want to delete?\");\n    if(result) \n    {\n      this.props.deleteRound();\n    }\n  }\n\n\n  //renderTable -- render an HTML table displaying the rounds logged\n  //by the current user and providing buttons to view/edit and delete each round.\n  renderTable = () => {\n  let table = [];\n  for (let r = 0; r < this.props.rounds.length; ++r) {\n    table.push(\n      <tr key={r}>\n        <td>{this.props.rounds[r].date.substring(0,10)}</td>\n        <td>{this.props.rounds[r].course}</td>\n        <td>{(Number(this.props.rounds[r].strokes) + \n              Number(this.props.rounds[r].minutes)) +\n              \":\" + (this.props.rounds[r].seconds < 10 ?  \n                \"0\" + this.props.rounds[r].seconds :\n                this.props.rounds[r].seconds) + \" (\" + \n              this.props.rounds[r].strokes + \n              \" in \" + this.props.rounds[r].minutes + \":\" + \n              (this.props.rounds[r].seconds < 10 ?  \n                \"0\" + this.props.rounds[r].seconds :\n                this.props.rounds[r].seconds) + \")\"}\n        </td>\n        <td><button onClick={this.props.menuOpen ? null : () => \n          this.editRound(r)}>\n              <span className=\"fa fa-eye\"></span></button></td>\n        <td><button onClick={this.props.menuOpen ? null : \n          () => this.confirmDelete(r)}>\n              <span className=\"fa fa-trash\"></span></button></td>\n      </tr> \n    );\n  }\n  return table;\n  }\n\n  //render--render the entire rounds table with header, displaying a \"No\n  //Rounds Logged\" message in case the table is empty.\n  render() {\n    return(\n    <div className=\"padded-page\">\n      <h1></h1>\n      <table className=\"table table-hover\">\n        <thead className=\"thead-light\">\n        <tr>\n          <th>Date</th>\n          <th>Course</th>\n          <th>Score</th>\n          <th>View/Edit...</th>\n          <th>Delete</th>\n        </tr>\n        </thead>\n        <tbody>\n          {Object.keys(this.props.rounds).length === 0 ? \n          <tr>\n          <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\n          </tr> : this.renderTable()\n          }\n        </tbody>\n      </table>\n    </div>\n    );\n  }\n}\n\nexport default RoundsTable;\n","import React from 'react';\nimport AppMode from './../AppMode.js';\n\nclass RoundForm extends React.Component {\n  constructor(props) {\n  super(props);\n  //Create date object for today, taking time zone into consideration\n  let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\n  //store date as ISO string\n  if (this.props.mode === AppMode.ROUNDS_LOGROUND) {\n    //If logging a new round, the starting state is a default round with\n    //today's date.\n    this.state = {date:  today.toISOString().substr(0,10), \n                  course: \"\",\n                  type: \"practice\",\n                  holes: \"18\",\n                  strokes: 80,\n                  minutes: 50,\n                  seconds: \"00\",\n                  notes: \"\",\n                  faIcon: \"fa fa-save\",\n                  btnLabel: \"Save Round Data\"}\n  } else {\n    //if editing an existing round, the starting state is the round's\n    //current data\n    let thisRound = {...this.props.startData};\n    delete thisRound.id;\n    thisRound.faIcon = \"fa fa-edit\";\n    thisRound.btnLabel = \"Update Round Data\";\n    this.state = thisRound;\n  }\n}\n  \n  \n    handleChange = (event) => {\n        const name = event.target.name;\n        if (name === \"seconds\") {\n          let newSec = (event.target.value.length < 2 ? \"0\" + \n            event.target.value : event.target.value);\n          let newSGS = this.computeSGS(this.state.strokes, this.state.minutes, \n                                       newSec);\n          this.setState({seconds: newSec, SGS: newSGS});\n        } else if (name === \"strokes\") {\n          let newStrokes = event.target.value;\n          let newSGS = this.computeSGS(newStrokes, this.state.minutes, \n            this.state.seconds);\n          this.setState({strokes: newStrokes, SGS: newSGS});\n        } else if (name === \"minutes\") {\n            let newMin = event.target.value;\n            let newSGS = this.computeSGS(this.state.strokes, newMin, \n              this.state.seconds);\n            this.setState({minutes: newMin, SGS: newSGS});\n        } else {\n          this.setState({[name]: event.target.value});\n        }\n    }\n  \n  \n    //handleSubmit -- When the user clicks on the button to save/update the\n    //round, start the spinner and invoke the parent component's saveRound\n    //method to do the actual work. Note that saveRound is set to the correct\n    //parent method based on whether the user is logging a new round or editing\n    //an existing round.\n    handleSubmit = (event) => {\n        //start spinner\n        this.setState({faIcon: \"fa fa-spin fa-spinner\",\n                        btnLabel: (this.props.mode === AppMode.ROUNDS_LOGROUND ? \n                                    \"Saving...\" : \"Updating...\")});\n        //Prepare current round data to be saved\n        let roundData = this.state;\n        delete roundData.faIcon;\n        delete roundData.btnLabel;\n        //call saveRound on 1 second delay to show spinning icon\n        setTimeout(this.props.saveRound,1000,roundData); \n        event.preventDefault(); \n        }\n  \n\n    computeSGS = (strokes, min, sec) => {\n      return (Number(strokes) + Number(min)) \n                  + \":\" + sec;\n    }\n  \n    render() {\n      return (\n        <form className=\"padded-page\" onSubmit={this.handleSubmit}>\n          <center>\n            <label>\n              Date:\n              <input name=\"date\" className=\"form-control form-center\" \n                type=\"date\" value={this.state.date} onChange={this.handleChange} />\n            </label>\n            <p></p>\n            <label>\n              Course:\n              <input name=\"course\" className=\"form-control form-center\" type=\"text\"\n                value={this.state.course} onChange={this.handleChange}\n                placeholder=\"Course played\" size=\"50\" maxLength=\"50\" />\n            </label>\n          <p></p>\n          <label>Type:\n          <select name=\"type\" value={this.state.type} \n            className=\"form-control form-center\" onChange={this.handleChange}>\n            <option value=\"practice\">Practice</option>\n            <option value=\"tournament\">Tournament</option>\n          </select> \n          </label>\n          <p></p>\n          <label># Holes:\n          <select name=\"holes\" value={this.state.holes} \n            className=\"form-control form-center\" onChange={this.handleChange}>\n            <option value=\"9\">9</option>\n            <option value=\"18\">18</option>\n          </select> \n          </label>\n          <p></p>\n          <label># Strokes:\n          <input name=\"strokes\" className=\"form-control form-center\" type=\"number\" \n            min=\"9\" max=\"200\" value={this.state.strokes} \n            onChange={this.handleChange} />\n          </label>\n          <p></p>\n          <label>Time: <br></br>\n          <input name=\"minutes\" type=\"number\" size=\"3\"\n            min=\"10\" max=\"400\" value={this.state.minutes}\n            onChange={this.handleChange} />:  \n          <input name=\"seconds\" type=\"number\" size=\"2\"\n            min=\"0\" max=\"60\" value={this.state.seconds} \n            onChange={this.handleChange} />\n          </label>\n          <p></p>\n          <label>Speedgolf Score: <br></br>\n              <input name=\"SGS\" className=\"form-center\" type=\"text\" size=\"6\" \n                disabled={true} value={this.computeSGS(this.state.strokes,this.state.minutes,this.state.seconds)} />\n          </label>\n          <p></p>\n          <label>Notes:\n              <textarea name=\"notes\" className=\"form-control\" rows=\"6\" cols=\"75\" \n                placeholder=\"Enter round notes\" value={this.state.notes} \n                onChange={this.handleChange} />\n          </label>\n          <p></p>\n          <p></p>\n          <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \n            className=\"btn btn-primary btn-color-theme\">\n              <span className={this.state.faIcon}/>&nbsp;{this.state.btnLabel}\n          </button>\n          </center>\n        </form>\n      );\n    }\n}\n\nexport default RoundForm;","//Rounds -- A parent component for the app's \"rounds\" mode.\n//Manages the rounds data for the current user and conditionally renders the\n//appropriate rounds mode page based on App's mode, which is passed in as a prop.\n\nimport React from 'react';\nimport AppMode from './../AppMode.js';\nimport RoundsTable from './RoundsTable.js';\nimport RoundForm from './RoundForm.js';\nimport FloatingButton from './FloatingButton.js';\n\nclass Rounds extends React.Component {\n\n    //Initialize a Rounds object based on local storage\n    constructor() {\n        super();\n        this.state = {deleteId: \"\",\n                      editId: \"\"};           \n    }\n\n    //componentDidMount -- After the component moutns, obtain current user's \n    //rounds from the server and push them into component state\n    // componentDidMount = async () => {\n    //     let url = \"/rounds/\" + this.props.userObj.id;\n    //     let res = await fetch(url, {method: 'GET'});\n    //     if (res.status != 200) {\n    //         let msg = await res.text();\n    //         alert(\"There was an error obtaining rounds data for this user: \" \n    //         + msg);\n    //         return;\n    //     } \n    //     let body = await res.json();\n    //     body = JSON.parse(body);\n    //     alert(\"in componentDidMount with GET results: \" + body);\n    //     this.setState({rounds: body}, this.props.changeMode(AppMode.ROUNDS));\n    // }\n\n    //addRound -- Given an object newData containing a new round, use the \n    //server POST route to add the new round to the database. If the add is\n    //successful, call on the refreshOnUpdate() method to force the parent\n    //App component to refresh its state from the database and re-render itself,\n    //allowing the change to be propagated to the Rounds table. Then switch\n    //the mode back to AppMode.ROUNDS since the user is done adding a round.\n    addRound = async (newData) => {\n        const url = '/rounds/' + this.props.userObj.id;\n        const res = await fetch(url, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n                },\n            method: 'POST',\n            body: JSON.stringify(newData)}); \n        const msg = await res.text();\n        if (res.status != 200) {\n            alert(\"An error occurred when attempting to add new round to database: \"    \n            + msg);\n            this.props.changeMode(AppMode.ROUNDS);\n        } else {\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\n        }\n    }\n\n    //editRound -- Given an object newData containing updated data on an\n    //existing round, update the current user's round in the database. \n    //toggle the mode back to AppMode.ROUNDS since the user is done editing the\n    //round. \n    editRound = async (newData) => {\n        const url = '/rounds/' + this.props.userObj.id + '/' + \n            this.props.userObj.rounds[this.state.editId]._id;\n        const res = await fetch(url, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n                },\n            method: 'PUT',\n            body: JSON.stringify(newData)}); \n        const msg = await res.text();\n        if (res.status != 200) {\n            alert(\"An error occurred when attempting to add new round to database: \" \n            + msg);\n            this.props.changeMode(AppMode.ROUNDS);\n        } else {\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\n        }\n    }\n\n\n    //deleteRound -- Delete the current user's round uniquely identified by\n    //this.state.deleteId, delete from the database, and reset deleteId to empty.\n    deleteRound = async () => {\n        // TO DO: Fill this in\n        const url = '/rounds/' + this.props.userObj.id + '/' + \n        this.props.userObj.rounds[this.state.deleteId]._id;\n        const res = await fetch(url, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n                },\n            method: 'DELETE'}); \n        const msg = await res.text();\n        if (res.status != 200) {\n            alert(\"An error occurred when attempting to delete a round from database: \" \n            + msg);\n        } else {\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\n        }\n    }\n \n    //setDeleteId -- Capture in this.state.deleteId the unique id of the item\n    //the user is considering deleting.\n    setDeleteId = (val) => {\n        this.setState({deleteId: val});\n        this.state.deleteId = val;\n    }\n\n    //setEditId -- Capture in this.state.editId the unique id of the item\n    //the user is considering editing.\n    setEditId = (val) => {\n        this.setState({editId: val});\n    }\n    \n    //render -- Conditionally render the Rounds mode page as either the rounds\n    //table, the rounds form set to obtain a new round, or the rounds form set\n    //to edit an existing round.\n    render() {\n        switch(this.props.mode) {\n            case AppMode.ROUNDS:\n                return (\n                    <>\n                    <RoundsTable \n                        rounds={this.props.userObj.rounds}\n                        setEditId={this.setEditId}\n                        setDeleteId={this.setDeleteId}\n                        deleteRound={this.deleteRound}\n                        changeMode={this.props.changeMode}\n                        menuOpen={this.props.menuOpen} /> \n                    <FloatingButton\n                        handleClick={() => \n                        this.props.changeMode(AppMode.ROUNDS_LOGROUND)}\n                        menuOpen={this.props.menuOpen}\n                        icon={\"fa fa-plus\"} />\n                    </>\n                );\n            case AppMode.ROUNDS_LOGROUND:\n                return (\n                    <RoundForm\n                        mode={this.props.mode}\n                        startData={\"\"} \n                        saveRound={this.addRound} />\n                );\n            case AppMode.ROUNDS_EDITROUND:\n                let thisRound = {...this.props.userObj.rounds[this.state.editId]};\n                thisRound.date = thisRound.date.substr(0,10);\n                if (thisRound.seconds < 10) {\n                    thisRound.seconds = \"0\" + thisRound.seconds;\n                } \n                delete thisRound.SGS;\n                return (\n                    <RoundForm\n                        mode={this.props.mode}\n                        startData={thisRound} \n                        saveRound={this.editRound} />\n                );\n        }\n    }\n\n}   \n\nexport default Rounds;\n","import React from 'react';\nimport AppMode from \"./../AppMode.js\"\n\nclass DirectorMainPage extends React.Component {\n\n    render() {\n        return (\n        <div className=\"padded-page\">\n            <center>\n            <h1 >Director Main Page</h1>\n            <h2>This page is under construction.</h2>\n            <p>\n                <a class=\"btn btn-primary\" onClick={()=>this.props.changeMode(AppMode.FEED)}>\n                <span>Tournament Configuration</span>\n                </a>\n                <br></br>\n                <a class=\"btn btn-primary\" onClick={()=>this.props.changeMode(AppMode.LEADERBOARD)}>\n                    <span >Leaderboard</span>\n                </a> \n            </p>\n            </center>\n        </div>\n        );\n    }   \n}\n\nexport default DirectorMainPage;","import React from 'react';\n\nclass Config_Divions extends React.Component {\n\n    render() {\n        return (\n        <div className=\"padded-page\">\n            <center>\n            <h1 >Leaderboard</h1>\n            <h2>This page is under construction.</h2>\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \n             height=\"200\" width=\"200\"/>\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\n            </center>\n        </div>\n        );\n    }   \n}\n\nexport default Config_Divions;","import React from 'react';\nimport NavBar from './NavBar.js';\nimport SideMenu from './SideMenu.js';\nimport ModeBar from './ModeBar.js';\nimport FloatingButton from './FloatingButton.js';\nimport LoginPage from './LoginPage.js';\nimport AppMode from \"./../AppMode.js\"\nimport FeedPage from './FeedPage.js';\nimport Rounds from './Rounds.js';\nimport DirectorMainPage from './DirectorMainPage.js';\nimport LeaderBoard from './Leaderboard.js'\n\nconst modeTitle = {};\nmodeTitle[AppMode.LOGIN] = \"Welcome to SpeedScore\";\nmodeTitle[AppMode.FEED] = \"\";\nmodeTitle[AppMode.ROUNDS] = \"My Rounds\";\nmodeTitle[AppMode.ROUNDS_LOGROUND] = \"Log New Round\";\nmodeTitle[AppMode.ROUNDS_EDITROUND] = \"Edit Round\";\nmodeTitle[AppMode.MAIN] = \"Director Main Page\"\n\nconst modeToPage = {};\nmodeToPage[AppMode.LOGIN] = LoginPage;\nmodeToPage[AppMode.FEED] = FeedPage;\nmodeToPage[AppMode.ROUNDS] = Rounds;\nmodeToPage[AppMode.ROUNDS_LOGROUND] = Rounds;\nmodeToPage[AppMode.ROUNDS_EDITROUND] = Rounds;\nmodeToPage[AppMode.MAIN] = DirectorMainPage;\nmodeToPage[AppMode.LEADERBOARD] = LeaderBoard;\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {mode: AppMode.LOGIN,\n                  menuOpen: false,\n                  authenticated: false,\n                  userObj: {displayName: \"\", profilePicURL: \"\"},\n                 };\n  }\n\n  //componentDidMount\n  componentDidMount() {\n    if (!this.state.authenticated) { \n      //Use /auth/test route to (re)-test authentication and obtain user data\n      fetch(\"/auth/test\")\n        .then((response) => response.json())\n        .then((obj) => {\n          if (obj.isAuthenticated) {\n            this.setState({\n              userObj: obj.user,\n              authenticated: true,\n              mode: AppMode.MAIN //We're authenticated so can get into the app.\n            });\n          }\n        }\n      )\n    } \n  }\n\n  //refreshOnUpdate(newMode) -- Called by child components when user data changes in \n  //the database. The function calls the users/:userid (GET) route to update \n  //the userObj state var based on the latest database changes, and sets the \n  //mode state var is set to newMode. After this method is called, the\n  //App will re-render itself, forcing the new data to \n  //propagate to the child components when they are re-rendered.\n  refreshOnUpdate = async(newMode) => {\n    let response = await fetch(\"/users/\" + this.state.userObj.id);\n    response = await response.json();\n    const obj = JSON.parse(response);\n    this.setState({\n      userObj: obj,\n      mode: newMode\n    });\n  }\n\n\n  handleChangeMode = (newMode) => {\n    if (newMode == \"LOGIN\") {\n      window.open(`/auth/logout`,\"_self\");\n    }\n    this.setState({mode: newMode});\n  }\n\n  openMenu = () => {\n    this.setState({menuOpen : true});\n  }\n  \n  closeMenu = () => {\n    this.setState({menuOpen : false});\n  }\n\n  toggleMenuOpen = () => {\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\n  }\n\n  setUserId = (Id) => {\n    this.setState({userId: Id,\n                   authenticated: true});\n  }\n\n\n  render() {\n    const ModePage = modeToPage[this.state.mode];\n    return (\n      <div>\n        <NavBar \n          title={modeTitle[this.state.mode]} \n          mode={this.state.mode}\n          changeMode={this.handleChangeMode}\n          menuOpen={this.state.menuOpen}\n          toggleMenuOpen={this.toggleMenuOpen}/>\n          <SideMenu \n            menuOpen = {this.state.menuOpen}\n            mode={this.state.mode}\n            toggleMenuOpen={this.toggleMenuOpen}\n            displayName={this.state.userObj.displayName}\n            profilePicURL={this.state.userObj.profilePicURL}\n            logOut={() => this.handleChangeMode(AppMode.LOGIN)}/>\n          <ModePage \n            menuOpen={this.state.menuOpen}\n            mode={this.state.mode}\n            changeMode={this.handleChangeMode}\n            userObj={this.state.userObj}\n            refreshOnUpdate={this.refreshOnUpdate}/>\n      </div>\n    );  \n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './styles/index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}