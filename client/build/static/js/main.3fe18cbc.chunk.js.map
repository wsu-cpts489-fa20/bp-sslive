{"version":3,"sources":["AppMode.js","components/NavBar.js","components/SideMenu.js","components/FloatingButton.js","components/ModeBar.js","components/LoginPage.js","ConfigTab.js","components/TabBar.js","components/Config_Basic.js","components/Config_Logo.js","components/Config_Courses.js","components/Config_Rounds.js","components/Config_Divisions.js","components/Config_Players.js","components/Config_Scorers.js","components/Config_Publish.js","components/FeedPage.js","components/RoundsTable.js","components/RoundForm.js","components/Rounds.js","components/DirectorMainPage.js","components/Leaderboard.js","components/App.js","serviceWorker.js","index.js"],"names":["AppMode","LOGIN","FEED","ROUNDS","ROUNDS_LOGROUND","ROUNDS_EDITROUND","COURSES","MAIN","LEADERBOARD","Object","freeze","NavBar","getMenuBtnIcon","props","mode","menuOpen","handleMenuBtnClick","changeMode","toggleMenuOpen","className","onClick","this","id","src","alt","height","width","title","React","Component","SideMenu","renderModeMenuItems","profilePicURL","displayName","logOut","FloatingButton","handleClick","LoginPage","handleLoginSubmit","event","a","preventDefault","setState","loginBtnIcon","loginBtnLabel","url","emailInputRef","current","value","fetch","method","res","status","window","open","text","resText","loginMsg","accountCreateStatus","msg","accountCreateMsg","showCreateAccountDialog","cancelCreateAccount","handleOAuthLogin","provider","handleOAuthLoginClick","setTimeout","createRef","state","showResetPasswordDialog","githubIcon","githubLabel","focus","onSubmit","htmlFor","style","padding","fontSize","name","ref","placeholder","pattern","required","type","ConfigTab","BASIC","LOGO","DIVISIONS","PLAYERS","SCORERS","PUBLISH","TabBar","Config_Basic","fontStyle","Config_Logo","Config_Courses","Config_Rounds","Config_Divions","Config_Players","Config_Scorers","handleChange","target","rounds","scorerFirstName","customize","onChange","custom","TableList","renderTableCustom","table","r","length","push","scorerLastName","scorerLoginCode","scoringAssignment","renderTable","bind","keys","colSpan","TableRow","TableRowCustom","size","Config_Publish","modeToPage","FeedPage","handleChangeMode","newMode","ModePage","RoundsTable","editRound","setEditId","confirmDelete","setDeleteId","confirm","deleteRound","key","date","substring","course","Number","strokes","minutes","seconds","RoundForm","newSec","newSGS","computeSGS","SGS","newStrokes","newMin","handleSubmit","faIcon","btnLabel","roundData","saveRound","min","sec","today","Date","now","getTimezoneOffset","toISOString","substr","holes","notes","thisRound","startData","maxLength","max","disabled","rows","cols","Rounds","addRound","newData","userObj","headers","body","JSON","stringify","alert","refreshOnUpdate","editId","_id","deleteId","val","icon","DirectorMainPage","class","modeTitle","LeaderBoard","App","response","json","obj","parse","openMenu","closeMenu","prevState","setUserId","Id","userId","authenticated","then","isAuthenticated","user","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3fe18cbc.chunk.js","sourcesContent":["/* AppMode: The enumerated type for AppMode. */\r\n\r\nconst AppMode = {\r\n    LOGIN: \"LoginMode\",\r\n    FEED: \"FeedMode\",\r\n    ROUNDS: \"RoundsMode\",\r\n    ROUNDS_LOGROUND: \"RoundsMode-LogRound\",\r\n    ROUNDS_EDITROUND: \"RoundsMode-EditRound\",\r\n    COURSES: \"CoursesMode\",\r\n    MAIN: \"DirectorMode\",\r\n    LEADERBOARD: \"LeaderboardMode\"\r\n};\r\n\r\nObject.freeze(AppMode); //This ensures that the object is immutable.\r\n\r\nexport default AppMode;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n  getMenuBtnIcon = () => {\r\n      if (this.props.mode === AppMode.ROUNDS_LOGROUND || \r\n          this.props.mode === AppMode.ROUNDS_EDITROUND)\r\n          return \"fa fa-arrow-left\";\r\n      if (this.props.menuOpen)\r\n        return \"fa fa-times\";\r\n      return \"fa fa-bars\";\r\n  }\r\n\r\n  handleMenuBtnClick = () => {\r\n    if (this.props.mode === AppMode.ROUNDS_LOGROUND ||\r\n        this.props.mode === AppMode.ROUNDS_EDITROUND) {\r\n      this.props.changeMode(AppMode.ROUNDS);\r\n    } else if (this.props.mode != AppMode.LOGIN) {\r\n      this.props.toggleMenuOpen();\r\n    }\r\n  }\r\n\r\n    \r\n  render() {\r\n    return (\r\n    <div className=\"navbar\">  \r\n    <span className=\"navbar-items\">\r\n      <button className=\"sidemenu-btn\" onClick={this.handleMenuBtnClick}>\r\n        <span id=\"menuBtnIcon\" className={\"sidemenu-btn-icon \" + this.getMenuBtnIcon()}>\r\n        </span>\r\n      </button>\r\n      <img src=\"http://tiny.cc/sslogo\" alt=\"Speed Score Logo\" height=\"38px\"\r\n      width=\"38px\" />\r\n      <span className=\"navbar-title\">\r\n        &nbsp;{this.props.title}\r\n      </span>\r\n    </span>\r\n  </div>\r\n); \r\n}\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport AppMode from './../AppMode.js'\r\n\r\nclass SideMenu extends React.Component {\r\n\r\n//renderModeItems -- Renders correct subset of mode menu items based on\r\n//current mode, which is stored in this.prop.mode. Uses switch statement to\r\n//determine mode.\r\nrenderModeMenuItems = () => {\r\n  switch (this.props.mode) {\r\n    case AppMode.FEED:\r\n      return(\r\n        <div>\r\n        <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-users\"></span>&nbsp;Main Page</a>\r\n        <a className=\"sidemenu-item \">\r\n            <span className=\"fa fa-search\"></span>&nbsp;LeaderBoard</a>\r\n        </div>\r\n      );\r\n    break;\r\n    case AppMode.ROUNDS:\r\n      return(\r\n        <div>\r\n          <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Log New Round</a>\r\n          <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Search Rounds</a>\r\n        </div>\r\n      );\r\n    break;\r\n    case AppMode.COURSES:\r\n      return(\r\n        <div>\r\n        <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Add a Course</a>\r\n        <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Search Courses</a>\r\n        </div>\r\n      );\r\n    default:\r\n        return null;\r\n    }\r\n}\r\n\r\n    render() {\r\n       return (\r\n        <div className={\"sidemenu \" + (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")}\r\n             onClick={this.props.toggleMenuOpen}>\r\n          {/* SIDE MENU TITLE */}\r\n          <div className=\"sidemenu-title\">\r\n            <img src={this.props.profilePicURL} height='60' width='60' />\r\n            <span id=\"userID\" className=\"sidemenu-userID\">&nbsp;{this.props.displayName}</span>\r\n        </div>\r\n          {/* MENU CONTENT */}\r\n          {this.renderModeMenuItems()}\r\n          {/* The following menu items are present regardless of mode */}\r\n          <a id=\"aboutBtn\" className=\"sidemenu-item\">\r\n            <span className=\"fa fa-info-circle\"></span>&nbsp;About</a>\r\n          <a id=\"logOutBtn\" className=\"sidemenu-item\" onClick={this.props.logOut}>\r\n            <span className=\"fa fa-sign-out-alt\"></span>&nbsp;Log Out</a>\r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React from 'react';\r\n\r\nclass FloatingButton extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className=\"floatbtn\" onClick={this.props.handleClick}>\r\n          <span className=\"floatbtn-icon fa fa-plus\"></span>\r\n        </div>  \r\n      );\r\n    }\r\n}\r\n\r\nexport default FloatingButton;\r\n","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\n\r\nclass ModeBar extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className={\"modebar\" + (this.props.mode === AppMode.LOGIN ? \r\n          \" invisible\" : (this.props.menuOpen ? \" ignore-click visible\" : \" visible\"))}>\r\n        <a className={(this.props.mode === AppMode.FEED ? \" item-selected\" : null)}\r\n            onClick={()=>this.props.changeMode(AppMode.FEED)}>\r\n          <span className=\"modebaricon fa fa-th-list\"></span>\r\n          <span className=\"modebar-text\">Feed</span>\r\n        </a>\r\n        <a className={(this.props.mode === AppMode.ROUNDS || \r\n               this.props.mode === AppMode.ROUNDS_EDITROUND || \r\n               this.props.mode === AppMode.ROUNDS_LOGROUND ? \r\n                  \" item-selected\" : null)}\r\n           onClick={()=>this.props.changeMode(AppMode.ROUNDS)}>\r\n          <span className=\"modebar-icon  fa fa-history\"></span>\r\n          <span className=\"modebar-text\">Rounds</span>\r\n        </a>\r\n        <a className={(this.props.mode === AppMode.COURSES ? \" item-selected\" : null)}\r\n          onClick={()=>this.props.changeMode(AppMode.COURSES)}>\r\n          <span className=\"modebar-icon  fa fa-flag\"></span>\r\n          <span className=\"modebar-text\">Courses</span>\r\n        </a> \r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default ModeBar;\r\n","import React from 'react';\r\nimport AppMode from \"./../AppMode.js\";\r\n\r\nclass LoginPage extends React.Component {\r\n\r\nconstructor() {\r\n    super();\r\n    //Create a ref for the email input DOM element\r\n    this.emailInputRef = React.createRef();\r\n    this.state = {accountCreateMsg: \"\",\r\n                  loginBtnIcon: \"fa fa-sign-in\",\r\n                  loginBtnLabel: \"Director Login\",\r\n                  showCreateAccountDialog: false,\r\n                  showResetPasswordDialog: false,\r\n                  githubIcon: \"fa fa-github\",\r\n                  githubLabel: \"Sign in with GitHub\",\r\n                  loginMsg: \"\"\r\n                  };\r\n} \r\n    \r\n//Focus cursor in email input field when mounted\r\ncomponentDidMount() {\r\n    this.emailInputRef.current.focus();\r\n}  \r\n\r\n//handleLogin -- Callback function that sets up initial app state upon login.\r\n//handleLogin = () => {\r\n    //Stop spinner\r\n//    this.setState({loginBtnIcon: \"fa fa-sign-in\",\r\n //                  loginBtnLabel: \"Log In\"});\r\n    //Set current user\r\n    //this.props.setUserId(this.emailInputRef.current.value);\r\n    //Trigger switch to FEED mode (default app landing page)\r\n    //this.props.changeMode(AppMode.FEED);\r\n//}\r\n\r\n\r\n//handleLoginSubmit -- Called when user clicks on login button.\r\nhandleLoginSubmit = async (event) => {\r\n    event.preventDefault();\r\n    this.setState({loginBtnIcon: \"fa fa-spin fa-spinner\",\r\n                   loginBtnLabel: \"Logging In...\"});\r\n    const url = \"auth/login?username=\" + this.emailInputRef.current.value + \"@email.com\" +\r\n                \"&password=\" + \"Password1!\"; // always sets password\r\n    const res = await fetch(url, {method: 'POST'}); \r\n    if (res.status == 200) { //successful login!\r\n        window.open(\"/\",\"_self\");\r\n    } else { //Unsuccessful login\r\n      const resText = await res.text();\r\n      this.setState({loginBtnIcon: \"fa fa-sign-in\",\r\n                     loginBtnLabel: \"Log In\",\r\n                     loginMsg: resText});\r\n    }\r\n}\r\n\r\n  //accountCreateStatus -- Called by child CreateAccountDialog component when \r\n  //user attempted to create new account. Hide the dialog and display \r\n  //a message indicating result of the attempt.\r\n  accountCreateStatus = (msg) => {\r\n      this.setState({accountCreateMsg: msg,\r\n                     showCreateAccountDialog: false});\r\n  }\r\n\r\n  //cancelCreateAccount -- Called by child CreateAccountDialog componenet when user decides\r\n  //to cancel creation of new account by clicking the \"X\" in top-right of dialog.\r\n  cancelCreateAccount = () => {\r\n      this.setState({showCreateAccountDialog: false});\r\n  }\r\n\r\n//handleOAuthLogin -- Callback function that initiates contact with OAuth\r\n//provider\r\nhandleOAuthLogin = (provider) => {\r\n    window.open(`/auth/${provider}`,\"_self\");\r\n}\r\n\r\n//handleOAuthLoginClick -- Called whent the user clicks on button to\r\n//authenticate via a third-party OAuth service. The name of the provider is\r\n//passed in as a parameter.\r\nhandleOAuthLoginClick = (provider) => {\r\n   this.setState({[provider + \"Icon\"] : \"fa fa-spin fa-spinner\",\r\n                  [provider + \"Label\"] : \"Connecting...\"});\r\n   setTimeout(() => this.handleOAuthLogin(provider),1000);\r\n}\r\n\r\n\r\n  render() {\r\n    return(\r\n        <div id=\"login-mode-div\" className=\"padded-page\">\r\n        <center>\r\n            <h1 />\r\n            {this.state.accountCreateMsg != \"\" ? <p className=\"emphasis\">{this.state.accountCreateMsg}</p> : null}\r\n            {this.state.loginMsg != \"\" ? <p className=\"emphasis\">{this.state.loginMsg}</p> : null}\r\n            <form id=\"loginInterface\" onSubmit={this.handleLoginSubmit}>\r\n            <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24 }}>\r\n                Name:\r\n                <input\r\n                name='emailInput'\r\n                ref={this.emailInputRef}\r\n                className=\"form-control login-text\"\r\n                placeholder=\"Enter Director Name\"\r\n                id=\"emailInput\"\r\n                pattern=\"[A-Za-z0-9._%+-]{2,}\"\r\n                required={true}\r\n                />\r\n            </label>\r\n            <p />\r\n            <p className=\"bg-danger\" id=\"feedback\" style={{ fontSize: 16 }} />\r\n            <button\r\n                name=\"loginBtn\"\r\n                id=\"loginBtn\"\r\n                type=\"submit\"\r\n                className=\"btn-color-theme btn btn-primary btn-block login-btn\">\r\n                <span id=\"login-btn-icon\" className={this.state.loginBtnIcon}/>\r\n                &nbsp;{this.state.loginBtnLabel}\r\n            </button>\r\n            <p>\r\n            </p>  \r\n            <p>\r\n                <i>Version CptS 489</i>\r\n            </p>\r\n            </form>\r\n        </center>\r\n        </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default LoginPage;\r\n","/* ConfigTab: The enumerated type for  ConfigTab. */\r\n\r\nconst  ConfigTab = {\r\n    BASIC: \"BasicInfoMode\",\r\n    LOGO: \"LogoMode\",\r\n    COURSES: \"CoursesMode\",\r\n    ROUNDS: \"RoundsMode\",\r\n    DIVISIONS: \"DivionsMode\",\r\n    PLAYERS: \"PlayersMode\",\r\n    SCORERS: \"ScorersMode\",\r\n    PUBLISH: \"PublishMode\"\r\n};\r\n\r\nObject.freeze(ConfigTab); //This ensures that the object is immutable.\r\n\r\nexport default  ConfigTab;","import React from 'react';\r\nimport ConfigTab from '../ConfigTab.js';\r\n\r\nclass TabBar extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className=\"tabbar\">\r\n        <a className={(this.props.mode === ConfigTab.BASIC ? \" item-selected\" : null)}\r\n            onClick={()=>this.props.changeMode(ConfigTab.BASIC)}>\r\n          <span className=\"tabbar-text\">Basic Info</span>\r\n        </a>\r\n        <a className={(this.props.mode === ConfigTab.LOGO ? \" item-selected\" : null)}\r\n           onClick={()=>this.props.changeMode(ConfigTab.LOGO)}>\r\n          <span className=\"tabbar-text\">Logo + Colors</span>\r\n        </a>\r\n        <a className={(this.props.mode === ConfigTab.COURSES ? \" item-selected\" : null)}\r\n          onClick={()=>this.props.changeMode(ConfigTab.COURSES)}>\r\n          <span className=\"tabbar-text\">Courses</span>\r\n        </a> \r\n        <a className={(this.props.mode === ConfigTab.ROUNDS ? \" item-selected\" : null)}\r\n          onClick={()=>this.props.changeMode(ConfigTab.ROUNDS)}>\r\n          <span className=\"tabbar-text\">Rounds</span>\r\n        </a> \r\n        <a className={(this.props.mode === ConfigTab.DIVISIONS ? \" item-selected\" : null)}\r\n          onClick={()=>this.props.changeMode(ConfigTab.DIVISIONS)}>\r\n          <span className=\"tabbar-text\">Divisions</span>\r\n        </a> \r\n        <a className={(this.props.mode === ConfigTab.PLAYERS ? \" item-selected\" : null)}\r\n          onClick={()=>this.props.changeMode(ConfigTab.PLAYERS)}>\r\n          <span className=\"tabbar-text\">Players</span>\r\n        </a> \r\n        <a className={(this.props.mode === ConfigTab.SCORERS ? \" item-selected\" : null)}\r\n          onClick={()=>this.props.changeMode(ConfigTab.SCORERS)}>\r\n          <span className=\"tabbar-text\">Scorers</span>\r\n        </a> \r\n        <a className={(this.props.mode === ConfigTab.PUBLISH ? \" item-selected\" : null)}\r\n          onClick={()=>this.props.changeMode(ConfigTab.PUBLISH)}>\r\n          <span className=\"tabbar-text\">Publish</span>\r\n        </a> \r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default TabBar;","import React from 'react';\r\n\r\nclass Config_Basic extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >Basic Info</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default Config_Basic;","import React from 'react';\r\n\r\nclass Config_Logo extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >Logo</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default  Config_Logo;","import React from 'react';\r\n\r\nclass Config_Courses extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >Courses</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default Config_Courses;","import React from 'react';\r\n\r\nclass Config_Rounds extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 > Rounds</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default  Config_Rounds;","import React from 'react';\r\n\r\nclass Config_Divions extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >Divions</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default Config_Divions;","import React from 'react';\r\n\r\nclass Config_Players extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >Player</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default  Config_Players;","import React from 'react';\r\n\r\nclass Config_Scorers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n          this.state = {\r\n            customize: false,\r\n            rounds : [ \r\n                {\r\n                    \"scorerFirstName\" : \"Dallas\",\r\n                    \"scorerLastName\" : \"Padilla\",\r\n                    \"scorerLoginCode\" : \"password\",\r\n                    \"scoringAssignment\" : \"Starter for Round 1\"\r\n                }]\r\n          };\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        if (name === \"scorerFirstName\") {\r\n            this.setState({[this.state.rounds[0].scorerFirstName]: event.target.value});\r\n            this.state.rounds[0].scorerFirstName = event.target.value;\r\n        } else if(name === \"customize\") {\r\n            this.setState({[name]: event.target.value});\r\n        }\r\n        else \r\n        {\r\n            this.setState({[event.target.name]: event.target.value});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 > Scorers</h1>\r\n            <p></p>\r\n          <label>Would you like to customize scorer names and login codes?\r\n          <select name=\"customize\" value={this.state.customize} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value={false}>No</option>\r\n            <option value={true}>Yes</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <table className=\"table table-hover\">\r\n            <thead className=\"thead-light\">\r\n            <tr>\r\n                <th>SCORER LAST NAME</th>\r\n                <th>SCORER FIRST NAME</th>\r\n                <th>SCORER LOGIN CODE</th>\r\n                <th>SCORING ASSIGNMENT</th>\r\n            </tr>\r\n            </thead>\r\n             <TableList\r\n                rounds={this.state.rounds}\r\n                custom={this.state.customize}\r\n                handleChange={this.handleChange}\r\n                />\r\n            </table>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\nclass TableList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.renderTable = this.renderTable.bind(this);\r\n        this.renderTableCustom = this.renderTableCustom.bind(this);\r\n    }\r\n    renderTableCustom = () => {\r\n        let table = [];\r\n        for (let r = 0; r < this.props.rounds.length; ++r) {\r\n            table.push(\r\n            <TableRowCustom\r\n                handleChange= {this.props.handleChange}\r\n                scorerFirstName = {this.props.rounds[r].scorerFirstName}\r\n                scorerLastName = {this.props.rounds[r].scorerLastName}\r\n                scorerLoginCode = {this.props.rounds[r].scorerLoginCode}\r\n                scoringAssignment = {this.props.rounds[r].scoringAssignment}\r\n            />\r\n            );\r\n        }  \r\n        return table;\r\n    }\r\n    renderTable = () => {\r\n        let table = [];\r\n        for (let r = 0; r < this.props.rounds.length; ++r) {\r\n            table.push(\r\n            <TableRow \r\n                scorerFirstName = {this.props.rounds[r].scorerFirstName}\r\n                scorerLastName = {this.props.rounds[r].scorerLastName}\r\n                scorerLoginCode = {this.props.rounds[r].scorerLoginCode}\r\n                scoringAssignment = {this.props.rounds[r].scoringAssignment}/>\r\n            );\r\n        }\r\n        return table;\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n        <tbody>\r\n            { \r\n                Object.keys(this.props.rounds).length === 0 ?\r\n                <tr>\r\n                 <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\r\n                </tr> :  this.props.custom ? this.renderTableCustom() : this.renderTable()\r\n            }\r\n        </tbody>\r\n        );\r\n    }\r\n}\r\nclass TableRow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return ( \r\n            <tr>\r\n                <td>{this.props.scorerFirstName}</td>\r\n                <td>{this.props.scorerLastName}</td>\r\n                <td>{this.props.scorerLoginCode}</td>\r\n                <td>{this.props.scoringAssignment}</td>\r\n            </tr> \r\n        );\r\n    }\r\n}\r\nclass TableRowCustom extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return ( \r\n            <tr>\r\n                <td><input name=\"scorerFirstName\" size=\"25\" type=\"text\"\r\n                    value={this.props.scorerFirstName} onChange={this.props.handleChange}/></td>\r\n                <td><input name=\"scorerLastName\" size=\"25\" type=\"text\"\r\n                    value={this.props.scorerLastName} onChange={this.props.handleChange}/></td>\r\n                <td><input name=\"scorerLoginCode\" size=\"25\" type=\"text\"\r\n                    value={this.props.scorerLoginCode} onChange={this.props.handleChange}/></td>\r\n                <td><input name=\"scoringAssignment\" size=\"25\" type=\"text\"\r\n                    value={this.props.scoringAssignment} onChange={this.props.handleChange}/></td>\r\n            </tr> \r\n        );\r\n    }\r\n}\r\n\r\nexport default  Config_Scorers;","import React from 'react';\r\n\r\nclass Config_Publish extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 > Publish</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default   Config_Publish;","import React from 'react';\r\nimport ConfigTab from '../ConfigTab.js';\r\nimport TabBar from './TabBar.js';\r\nimport Config_Basic from './Config_Basic.js';\r\nimport Config_Logo from './Config_Logo.js';\r\nimport Config_Courses from './Config_Courses.js';\r\nimport Config_Rounds from './Config_Rounds.js';\r\nimport Config_Divions from './Config_Divisions.js';\r\nimport Config_Players from './Config_Players.js';\r\nimport Config_Scorers from './Config_Scorers.js';\r\nimport Config_Publish from './Config_Publish.js';\r\n\r\nconst modeToPage = {};\r\nmodeToPage[ConfigTab.BASIC] = Config_Basic;\r\nmodeToPage[ConfigTab.LOGO] = Config_Logo;\r\nmodeToPage[ConfigTab.COURSES] = Config_Courses;\r\nmodeToPage[ConfigTab.ROUNDS] = Config_Rounds;\r\nmodeToPage[ConfigTab.DIVISIONS] = Config_Divions;\r\nmodeToPage[ConfigTab.PLAYERS] = Config_Players;\r\nmodeToPage[ConfigTab.SCORERS] = Config_Scorers;\r\nmodeToPage[ConfigTab.PUBLISH] = Config_Publish;\r\n\r\nclass FeedPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {mode: ConfigTab.BASIC,\r\n                      menuOpen: false,\r\n                     };\r\n      }\r\n\r\n    handleChangeMode = (newMode) => {\r\n        if (newMode == \"LOGIN\") {\r\n          window.open(`/auth/logout`,\"_self\");\r\n        }\r\n        this.setState({mode: newMode});\r\n      }\r\n\r\n    render() {\r\n        const ModePage = modeToPage[this.state.mode];\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >Tournament Settings</h1>\r\n            <TabBar \r\n                 mode={this.state.mode} \r\n                 changeMode={this.handleChangeMode}\r\n                 menuOpen={this.state.menuOpen}/>\r\n            <ModePage \r\n                menuOpen={this.state.menuOpen}\r\n                mode={this.state.mode}\r\n                changeMode={this.handleChangeMode}/>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default FeedPage;","import React from 'react';\r\nimport AppMode from './../AppMode.js';\r\n\r\nclass RoundsTable extends React.Component {\r\n\r\n  //editRound -- Triggered when the user clicks the edit button for a given\r\n  //round. The id param is the unique property that identifies the round.\r\n  //Set the state variable representing the id of the round to be edited and\r\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\r\n  //chosen round.\r\n  editRound = (id) => {\r\n    this.props.setEditId(id);\r\n    this.props.changeMode(AppMode.ROUNDS_EDITROUND);\r\n  }\r\n\r\n  //confirmDelete -- Triggered when the user clicks the delete button\r\n  //for a given round. The id paam is the unique property that \r\n  //identifies the round. Set the state variable representing the id\r\n  //of the round to be deleted and then present a dialog box asking\r\n  //the user to confirm the deletion.\r\n  //TO DO: Implement the confirmation dialog box. For now, we\r\n  //present alert box placeholder\r\n  confirmDelete = (id) => {\r\n    this.props.setDeleteId(id);\r\n    var result = window.confirm(\"Are you sure you want to delete?\");\r\n    if(result) \r\n    {\r\n      this.props.deleteRound();\r\n    }\r\n  }\r\n\r\n\r\n  //renderTable -- render an HTML table displaying the rounds logged\r\n  //by the current user and providing buttons to view/edit and delete each round.\r\n  renderTable = () => {\r\n  let table = [];\r\n  for (let r = 0; r < this.props.rounds.length; ++r) {\r\n    table.push(\r\n      <tr key={r}>\r\n        <td>{this.props.rounds[r].date.substring(0,10)}</td>\r\n        <td>{this.props.rounds[r].course}</td>\r\n        <td>{(Number(this.props.rounds[r].strokes) + \r\n              Number(this.props.rounds[r].minutes)) +\r\n              \":\" + (this.props.rounds[r].seconds < 10 ?  \r\n                \"0\" + this.props.rounds[r].seconds :\r\n                this.props.rounds[r].seconds) + \" (\" + \r\n              this.props.rounds[r].strokes + \r\n              \" in \" + this.props.rounds[r].minutes + \":\" + \r\n              (this.props.rounds[r].seconds < 10 ?  \r\n                \"0\" + this.props.rounds[r].seconds :\r\n                this.props.rounds[r].seconds) + \")\"}\r\n        </td>\r\n        <td><button onClick={this.props.menuOpen ? null : () => \r\n          this.editRound(r)}>\r\n              <span className=\"fa fa-eye\"></span></button></td>\r\n        <td><button onClick={this.props.menuOpen ? null : \r\n          () => this.confirmDelete(r)}>\r\n              <span className=\"fa fa-trash\"></span></button></td>\r\n      </tr> \r\n    );\r\n  }\r\n  return table;\r\n  }\r\n\r\n  //render--render the entire rounds table with header, displaying a \"No\r\n  //Rounds Logged\" message in case the table is empty.\r\n  render() {\r\n    return(\r\n    <div className=\"padded-page\">\r\n      <h1></h1>\r\n      <table className=\"table table-hover\">\r\n        <thead className=\"thead-light\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Course</th>\r\n          <th>Score</th>\r\n          <th>View/Edit...</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(this.props.rounds).length === 0 ? \r\n          <tr>\r\n          <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\r\n          </tr> : this.renderTable()\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoundsTable;\r\n","import React from 'react';\r\nimport AppMode from './../AppMode.js';\r\n\r\nclass RoundForm extends React.Component {\r\n  constructor(props) {\r\n  super(props);\r\n  //Create date object for today, taking time zone into consideration\r\n  let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\r\n  //store date as ISO string\r\n  if (this.props.mode === AppMode.ROUNDS_LOGROUND) {\r\n    //If logging a new round, the starting state is a default round with\r\n    //today's date.\r\n    this.state = {date:  today.toISOString().substr(0,10), \r\n                  course: \"\",\r\n                  type: \"practice\",\r\n                  holes: \"18\",\r\n                  strokes: 80,\r\n                  minutes: 50,\r\n                  seconds: \"00\",\r\n                  notes: \"\",\r\n                  faIcon: \"fa fa-save\",\r\n                  btnLabel: \"Save Round Data\"}\r\n  } else {\r\n    //if editing an existing round, the starting state is the round's\r\n    //current data\r\n    let thisRound = {...this.props.startData};\r\n    delete thisRound.id;\r\n    thisRound.faIcon = \"fa fa-edit\";\r\n    thisRound.btnLabel = \"Update Round Data\";\r\n    this.state = thisRound;\r\n  }\r\n}\r\n  \r\n  \r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        if (name === \"seconds\") {\r\n          let newSec = (event.target.value.length < 2 ? \"0\" + \r\n            event.target.value : event.target.value);\r\n          let newSGS = this.computeSGS(this.state.strokes, this.state.minutes, \r\n                                       newSec);\r\n          this.setState({seconds: newSec, SGS: newSGS});\r\n        } else if (name === \"strokes\") {\r\n          let newStrokes = event.target.value;\r\n          let newSGS = this.computeSGS(newStrokes, this.state.minutes, \r\n            this.state.seconds);\r\n          this.setState({strokes: newStrokes, SGS: newSGS});\r\n        } else if (name === \"minutes\") {\r\n            let newMin = event.target.value;\r\n            let newSGS = this.computeSGS(this.state.strokes, newMin, \r\n              this.state.seconds);\r\n            this.setState({minutes: newMin, SGS: newSGS});\r\n        } else {\r\n          this.setState({[name]: event.target.value});\r\n        }\r\n    }\r\n  \r\n  \r\n    //handleSubmit -- When the user clicks on the button to save/update the\r\n    //round, start the spinner and invoke the parent component's saveRound\r\n    //method to do the actual work. Note that saveRound is set to the correct\r\n    //parent method based on whether the user is logging a new round or editing\r\n    //an existing round.\r\n    handleSubmit = (event) => {\r\n        //start spinner\r\n        this.setState({faIcon: \"fa fa-spin fa-spinner\",\r\n                        btnLabel: (this.props.mode === AppMode.ROUNDS_LOGROUND ? \r\n                                    \"Saving...\" : \"Updating...\")});\r\n        //Prepare current round data to be saved\r\n        let roundData = this.state;\r\n        delete roundData.faIcon;\r\n        delete roundData.btnLabel;\r\n        //call saveRound on 1 second delay to show spinning icon\r\n        setTimeout(this.props.saveRound,1000,roundData); \r\n        event.preventDefault(); \r\n        }\r\n  \r\n\r\n    computeSGS = (strokes, min, sec) => {\r\n      return (Number(strokes) + Number(min)) \r\n                  + \":\" + sec;\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form className=\"padded-page\" onSubmit={this.handleSubmit}>\r\n          <center>\r\n            <label>\r\n              Date:\r\n              <input name=\"date\" className=\"form-control form-center\" \r\n                type=\"date\" value={this.state.date} onChange={this.handleChange} />\r\n            </label>\r\n            <p></p>\r\n            <label>\r\n              Course:\r\n              <input name=\"course\" className=\"form-control form-center\" type=\"text\"\r\n                value={this.state.course} onChange={this.handleChange}\r\n                placeholder=\"Course played\" size=\"50\" maxLength=\"50\" />\r\n            </label>\r\n          <p></p>\r\n          <label>Type:\r\n          <select name=\"type\" value={this.state.type} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"practice\">Practice</option>\r\n            <option value=\"tournament\">Tournament</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label># Holes:\r\n          <select name=\"holes\" value={this.state.holes} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"9\">9</option>\r\n            <option value=\"18\">18</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label># Strokes:\r\n          <input name=\"strokes\" className=\"form-control form-center\" type=\"number\" \r\n            min=\"9\" max=\"200\" value={this.state.strokes} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Time: <br></br>\r\n          <input name=\"minutes\" type=\"number\" size=\"3\"\r\n            min=\"10\" max=\"400\" value={this.state.minutes}\r\n            onChange={this.handleChange} />:  \r\n          <input name=\"seconds\" type=\"number\" size=\"2\"\r\n            min=\"0\" max=\"60\" value={this.state.seconds} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Speedgolf Score: <br></br>\r\n              <input name=\"SGS\" className=\"form-center\" type=\"text\" size=\"6\" \r\n                disabled={true} value={this.computeSGS(this.state.strokes,this.state.minutes,this.state.seconds)} />\r\n          </label>\r\n          <p></p>\r\n          <label>Notes:\r\n              <textarea name=\"notes\" className=\"form-control\" rows=\"6\" cols=\"75\" \r\n                placeholder=\"Enter round notes\" value={this.state.notes} \r\n                onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <p></p>\r\n          <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \r\n            className=\"btn btn-primary btn-color-theme\">\r\n              <span className={this.state.faIcon}/>&nbsp;{this.state.btnLabel}\r\n          </button>\r\n          </center>\r\n        </form>\r\n      );\r\n    }\r\n}\r\n\r\nexport default RoundForm;","//Rounds -- A parent component for the app's \"rounds\" mode.\r\n//Manages the rounds data for the current user and conditionally renders the\r\n//appropriate rounds mode page based on App's mode, which is passed in as a prop.\r\n\r\nimport React from 'react';\r\nimport AppMode from './../AppMode.js';\r\nimport RoundsTable from './RoundsTable.js';\r\nimport RoundForm from './RoundForm.js';\r\nimport FloatingButton from './FloatingButton.js';\r\n\r\nclass Rounds extends React.Component {\r\n\r\n    //Initialize a Rounds object based on local storage\r\n    constructor() {\r\n        super();\r\n        this.state = {deleteId: \"\",\r\n                      editId: \"\"};           \r\n    }\r\n\r\n    //componentDidMount -- After the component moutns, obtain current user's \r\n    //rounds from the server and push them into component state\r\n    // componentDidMount = async () => {\r\n    //     let url = \"/rounds/\" + this.props.userObj.id;\r\n    //     let res = await fetch(url, {method: 'GET'});\r\n    //     if (res.status != 200) {\r\n    //         let msg = await res.text();\r\n    //         alert(\"There was an error obtaining rounds data for this user: \" \r\n    //         + msg);\r\n    //         return;\r\n    //     } \r\n    //     let body = await res.json();\r\n    //     body = JSON.parse(body);\r\n    //     alert(\"in componentDidMount with GET results: \" + body);\r\n    //     this.setState({rounds: body}, this.props.changeMode(AppMode.ROUNDS));\r\n    // }\r\n\r\n    //addRound -- Given an object newData containing a new round, use the \r\n    //server POST route to add the new round to the database. If the add is\r\n    //successful, call on the refreshOnUpdate() method to force the parent\r\n    //App component to refresh its state from the database and re-render itself,\r\n    //allowing the change to be propagated to the Rounds table. Then switch\r\n    //the mode back to AppMode.ROUNDS since the user is done adding a round.\r\n    addRound = async (newData) => {\r\n        const url = '/rounds/' + this.props.userObj.id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'POST',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            alert(\"An error occurred when attempting to add new round to database: \"    \r\n            + msg);\r\n            this.props.changeMode(AppMode.ROUNDS);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }\r\n    }\r\n\r\n    //editRound -- Given an object newData containing updated data on an\r\n    //existing round, update the current user's round in the database. \r\n    //toggle the mode back to AppMode.ROUNDS since the user is done editing the\r\n    //round. \r\n    editRound = async (newData) => {\r\n        const url = '/rounds/' + this.props.userObj.id + '/' + \r\n            this.props.userObj.rounds[this.state.editId]._id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'PUT',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            alert(\"An error occurred when attempting to add new round to database: \" \r\n            + msg);\r\n            this.props.changeMode(AppMode.ROUNDS);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }\r\n    }\r\n\r\n\r\n    //deleteRound -- Delete the current user's round uniquely identified by\r\n    //this.state.deleteId, delete from the database, and reset deleteId to empty.\r\n    deleteRound = async () => {\r\n        // TO DO: Fill this in\r\n        const url = '/rounds/' + this.props.userObj.id + '/' + \r\n        this.props.userObj.rounds[this.state.deleteId]._id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            alert(\"An error occurred when attempting to delete a round from database: \" \r\n            + msg);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }\r\n    }\r\n \r\n    //setDeleteId -- Capture in this.state.deleteId the unique id of the item\r\n    //the user is considering deleting.\r\n    setDeleteId = (val) => {\r\n        this.setState({deleteId: val});\r\n        this.state.deleteId = val;\r\n    }\r\n\r\n    //setEditId -- Capture in this.state.editId the unique id of the item\r\n    //the user is considering editing.\r\n    setEditId = (val) => {\r\n        this.setState({editId: val});\r\n    }\r\n    \r\n    //render -- Conditionally render the Rounds mode page as either the rounds\r\n    //table, the rounds form set to obtain a new round, or the rounds form set\r\n    //to edit an existing round.\r\n    render() {\r\n        switch(this.props.mode) {\r\n            case AppMode.ROUNDS:\r\n                return (\r\n                    <>\r\n                    <RoundsTable \r\n                        rounds={this.props.userObj.rounds}\r\n                        setEditId={this.setEditId}\r\n                        setDeleteId={this.setDeleteId}\r\n                        deleteRound={this.deleteRound}\r\n                        changeMode={this.props.changeMode}\r\n                        menuOpen={this.props.menuOpen} /> \r\n                    <FloatingButton\r\n                        handleClick={() => \r\n                        this.props.changeMode(AppMode.ROUNDS_LOGROUND)}\r\n                        menuOpen={this.props.menuOpen}\r\n                        icon={\"fa fa-plus\"} />\r\n                    </>\r\n                );\r\n            case AppMode.ROUNDS_LOGROUND:\r\n                return (\r\n                    <RoundForm\r\n                        mode={this.props.mode}\r\n                        startData={\"\"} \r\n                        saveRound={this.addRound} />\r\n                );\r\n            case AppMode.ROUNDS_EDITROUND:\r\n                let thisRound = {...this.props.userObj.rounds[this.state.editId]};\r\n                thisRound.date = thisRound.date.substr(0,10);\r\n                if (thisRound.seconds < 10) {\r\n                    thisRound.seconds = \"0\" + thisRound.seconds;\r\n                } \r\n                delete thisRound.SGS;\r\n                return (\r\n                    <RoundForm\r\n                        mode={this.props.mode}\r\n                        startData={thisRound} \r\n                        saveRound={this.editRound} />\r\n                );\r\n        }\r\n    }\r\n\r\n}   \r\n\r\nexport default Rounds;\r\n","import React from 'react';\r\nimport AppMode from \"./../AppMode.js\"\r\n\r\nclass DirectorMainPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\" id=\"directorMainPage\" name=\"directorMainPage\">\r\n            <center>\r\n            <h1 >Director Main Page</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <p>\r\n                <a class=\"btn btn-primary\" onClick={()=>this.props.changeMode(AppMode.FEED)}>\r\n                <span>Tournament Configuration</span>\r\n                </a>\r\n                <br></br>\r\n                <a class=\"btn btn-primary\" onClick={()=>this.props.changeMode(AppMode.LEADERBOARD)}>\r\n                    <span >Leaderboard</span>\r\n                </a> \r\n            </p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default DirectorMainPage;","import React from 'react';\r\n\r\nclass Config_Divions extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page\">\r\n            <center>\r\n            <h1 >Leaderboard</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default Config_Divions;","import React from 'react';\r\nimport NavBar from './NavBar.js';\r\nimport SideMenu from './SideMenu.js';\r\nimport ModeBar from './ModeBar.js';\r\nimport FloatingButton from './FloatingButton.js';\r\nimport LoginPage from './LoginPage.js';\r\nimport AppMode from \"./../AppMode.js\"\r\nimport FeedPage from './FeedPage.js';\r\nimport Rounds from './Rounds.js';\r\nimport DirectorMainPage from './DirectorMainPage.js';\r\nimport LeaderBoard from './Leaderboard.js'\r\n\r\nconst modeTitle = {};\r\nmodeTitle[AppMode.LOGIN] = \"Welcome to SpeedScore\";\r\nmodeTitle[AppMode.FEED] = \"\";\r\nmodeTitle[AppMode.ROUNDS] = \"My Rounds\";\r\nmodeTitle[AppMode.ROUNDS_LOGROUND] = \"Log New Round\";\r\nmodeTitle[AppMode.ROUNDS_EDITROUND] = \"Edit Round\";\r\nmodeTitle[AppMode.MAIN] = \"Director Main Page\"\r\n\r\nconst modeToPage = {};\r\nmodeToPage[AppMode.LOGIN] = LoginPage;\r\nmodeToPage[AppMode.FEED] = FeedPage;\r\nmodeToPage[AppMode.ROUNDS] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_LOGROUND] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_EDITROUND] = Rounds;\r\nmodeToPage[AppMode.MAIN] = DirectorMainPage;\r\nmodeToPage[AppMode.LEADERBOARD] = LeaderBoard;\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {mode: AppMode.LOGIN,\r\n                  menuOpen: false,\r\n                  authenticated: false,\r\n                  userObj: {displayName: \"\", profilePicURL: \"\"},\r\n                 };\r\n  }\r\n\r\n  //componentDidMount\r\n  componentDidMount() {\r\n    if (!this.state.authenticated) { \r\n      //Use /auth/test route to (re)-test authentication and obtain user data\r\n      fetch(\"/auth/test\")\r\n        .then((response) => response.json())\r\n        .then((obj) => {\r\n          if (obj.isAuthenticated) {\r\n            this.setState({\r\n              userObj: obj.user,\r\n              authenticated: true,\r\n              mode: AppMode.MAIN //We're authenticated so can get into the app.\r\n            });\r\n          }\r\n        }\r\n      )\r\n    } \r\n  }\r\n\r\n  //refreshOnUpdate(newMode) -- Called by child components when user data changes in \r\n  //the database. The function calls the users/:userid (GET) route to update \r\n  //the userObj state var based on the latest database changes, and sets the \r\n  //mode state var is set to newMode. After this method is called, the\r\n  //App will re-render itself, forcing the new data to \r\n  //propagate to the child components when they are re-rendered.\r\n  refreshOnUpdate = async(newMode) => {\r\n    let response = await fetch(\"/users/\" + this.state.userObj.id);\r\n    response = await response.json();\r\n    const obj = JSON.parse(response);\r\n    this.setState({\r\n      userObj: obj,\r\n      mode: newMode\r\n    });\r\n  }\r\n\r\n\r\n  handleChangeMode = (newMode) => {\r\n    if (newMode == \"LOGIN\") {\r\n      window.open(`/auth/logout`,\"_self\");\r\n    }\r\n    this.setState({mode: newMode});\r\n  }\r\n\r\n  openMenu = () => {\r\n    this.setState({menuOpen : true});\r\n  }\r\n  \r\n  closeMenu = () => {\r\n    this.setState({menuOpen : false});\r\n  }\r\n\r\n  toggleMenuOpen = () => {\r\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\r\n  }\r\n\r\n  setUserId = (Id) => {\r\n    this.setState({userId: Id,\r\n                   authenticated: true});\r\n  }\r\n\r\n\r\n  render() {\r\n    const ModePage = modeToPage[this.state.mode];\r\n    return (\r\n      <div>\r\n        <NavBar \r\n          title={modeTitle[this.state.mode]} \r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          menuOpen={this.state.menuOpen}\r\n          toggleMenuOpen={this.toggleMenuOpen}/>\r\n          <SideMenu \r\n            menuOpen = {this.state.menuOpen}\r\n            mode={this.state.mode}\r\n            toggleMenuOpen={this.toggleMenuOpen}\r\n            displayName={this.state.userObj.displayName}\r\n            profilePicURL={this.state.userObj.profilePicURL}\r\n            logOut={() => this.handleChangeMode(AppMode.LOGIN)}/>\r\n          <ModePage \r\n            menuOpen={this.state.menuOpen}\r\n            mode={this.state.mode}\r\n            changeMode={this.handleChangeMode}\r\n            userObj={this.state.userObj}\r\n            refreshOnUpdate={this.refreshOnUpdate}/>\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './styles/index.css';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}